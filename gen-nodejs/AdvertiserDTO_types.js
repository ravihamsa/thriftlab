//
// Autogenerated by Thrift Compiler (0.9.0)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//
var Thrift = require('thrift').Thrift;
var ttypes = module.exports = {};
AdvCampaignSummary = module.exports.AdvCampaignSummary = function(args) {
  this.accountId = null;
  this.campaignId = null;
  this.campaignName = null;
  this.status = null;
  if (args) {
    if (args.accountId !== undefined) {
      this.accountId = args.accountId;
    }
    if (args.campaignId !== undefined) {
      this.campaignId = args.campaignId;
    }
    if (args.campaignName !== undefined) {
      this.campaignName = args.campaignName;
    }
    if (args.status !== undefined) {
      this.status = args.status;
    }
  }
};
AdvCampaignSummary.prototype = {};
AdvCampaignSummary.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.accountId = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.campaignId = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.campaignName = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.I32) {
        this.status = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AdvCampaignSummary.prototype.write = function(output) {
  output.writeStructBegin('AdvCampaignSummary');
  if (this.accountId !== null && this.accountId !== undefined) {
    output.writeFieldBegin('accountId', Thrift.Type.STRING, 1);
    output.writeString(this.accountId);
    output.writeFieldEnd();
  }
  if (this.campaignId !== null && this.campaignId !== undefined) {
    output.writeFieldBegin('campaignId', Thrift.Type.STRING, 2);
    output.writeString(this.campaignId);
    output.writeFieldEnd();
  }
  if (this.campaignName !== null && this.campaignName !== undefined) {
    output.writeFieldBegin('campaignName', Thrift.Type.STRING, 3);
    output.writeString(this.campaignName);
    output.writeFieldEnd();
  }
  if (this.status !== null && this.status !== undefined) {
    output.writeFieldBegin('status', Thrift.Type.I32, 4);
    output.writeI32(this.status);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

AdvCampaignDetail = module.exports.AdvCampaignDetail = function(args) {
  this.campaign = null;
  this.campaignId = null;
  this.status = null;
  this.createdOn = null;
  this.adGroupCount = null;
  this.balance = null;
  if (args) {
    if (args.campaign !== undefined) {
      this.campaign = args.campaign;
    }
    if (args.campaignId !== undefined) {
      this.campaignId = args.campaignId;
    }
    if (args.status !== undefined) {
      this.status = args.status;
    }
    if (args.createdOn !== undefined) {
      this.createdOn = args.createdOn;
    }
    if (args.adGroupCount !== undefined) {
      this.adGroupCount = args.adGroupCount;
    }
    if (args.balance !== undefined) {
      this.balance = args.balance;
    }
  }
};
AdvCampaignDetail.prototype = {};
AdvCampaignDetail.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.campaign = new AdvertiserModel_ttypes.AdvCampaign();
        this.campaign.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.campaignId = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.I32) {
        this.status = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.STRUCT) {
        this.createdOn = new DemandModel_ttypes.DateTime();
        this.createdOn.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 5:
      if (ftype == Thrift.Type.I32) {
        this.adGroupCount = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 6:
      if (ftype == Thrift.Type.DOUBLE) {
        this.balance = input.readDouble();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AdvCampaignDetail.prototype.write = function(output) {
  output.writeStructBegin('AdvCampaignDetail');
  if (this.campaign !== null && this.campaign !== undefined) {
    output.writeFieldBegin('campaign', Thrift.Type.STRUCT, 1);
    this.campaign.write(output);
    output.writeFieldEnd();
  }
  if (this.campaignId !== null && this.campaignId !== undefined) {
    output.writeFieldBegin('campaignId', Thrift.Type.STRING, 2);
    output.writeString(this.campaignId);
    output.writeFieldEnd();
  }
  if (this.status !== null && this.status !== undefined) {
    output.writeFieldBegin('status', Thrift.Type.I32, 3);
    output.writeI32(this.status);
    output.writeFieldEnd();
  }
  if (this.createdOn !== null && this.createdOn !== undefined) {
    output.writeFieldBegin('createdOn', Thrift.Type.STRUCT, 4);
    this.createdOn.write(output);
    output.writeFieldEnd();
  }
  if (this.adGroupCount !== null && this.adGroupCount !== undefined) {
    output.writeFieldBegin('adGroupCount', Thrift.Type.I32, 5);
    output.writeI32(this.adGroupCount);
    output.writeFieldEnd();
  }
  if (this.balance !== null && this.balance !== undefined) {
    output.writeFieldBegin('balance', Thrift.Type.DOUBLE, 6);
    output.writeDouble(this.balance);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

AdvCampaignSearchRequest = module.exports.AdvCampaignSearchRequest = function(args) {
  this.baseSearchParam = null;
  if (args) {
    if (args.baseSearchParam !== undefined) {
      this.baseSearchParam = args.baseSearchParam;
    }
  }
};
AdvCampaignSearchRequest.prototype = {};
AdvCampaignSearchRequest.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.baseSearchParam = new DemandDTO_ttypes.BaseSearchParam();
        this.baseSearchParam.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AdvCampaignSearchRequest.prototype.write = function(output) {
  output.writeStructBegin('AdvCampaignSearchRequest');
  if (this.baseSearchParam !== null && this.baseSearchParam !== undefined) {
    output.writeFieldBegin('baseSearchParam', Thrift.Type.STRUCT, 1);
    this.baseSearchParam.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

AdvGeoCarrierTargeting = module.exports.AdvGeoCarrierTargeting = function(args) {
  this.targetingType = null;
  this.presetId = null;
  this.targetingDetails = null;
  if (args) {
    if (args.targetingType !== undefined) {
      this.targetingType = args.targetingType;
    }
    if (args.presetId !== undefined) {
      this.presetId = args.presetId;
    }
    if (args.targetingDetails !== undefined) {
      this.targetingDetails = args.targetingDetails;
    }
  }
};
AdvGeoCarrierTargeting.prototype = {};
AdvGeoCarrierTargeting.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.targetingType = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I32) {
        this.presetId = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.LIST) {
        var _size0 = 0;
        var _rtmp34;
        this.targetingDetails = [];
        var _etype3 = 0;
        _rtmp34 = input.readListBegin();
        _etype3 = _rtmp34.etype;
        _size0 = _rtmp34.size;
        for (var _i5 = 0; _i5 < _size0; ++_i5)
        {
          var elem6 = null;
          elem6 = new AdvertiserModel_ttypes.AdvGeoCarrierTargetingDetail();
          elem6.read(input);
          this.targetingDetails.push(elem6);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AdvGeoCarrierTargeting.prototype.write = function(output) {
  output.writeStructBegin('AdvGeoCarrierTargeting');
  if (this.targetingType !== null && this.targetingType !== undefined) {
    output.writeFieldBegin('targetingType', Thrift.Type.I32, 1);
    output.writeI32(this.targetingType);
    output.writeFieldEnd();
  }
  if (this.presetId !== null && this.presetId !== undefined) {
    output.writeFieldBegin('presetId', Thrift.Type.I32, 2);
    output.writeI32(this.presetId);
    output.writeFieldEnd();
  }
  if (this.targetingDetails !== null && this.targetingDetails !== undefined) {
    output.writeFieldBegin('targetingDetails', Thrift.Type.LIST, 3);
    output.writeListBegin(Thrift.Type.STRUCT, this.targetingDetails.length);
    for (var iter7 in this.targetingDetails)
    {
      if (this.targetingDetails.hasOwnProperty(iter7))
      {
        iter7 = this.targetingDetails[iter7];
        iter7.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

AdvDeviceTargeting = module.exports.AdvDeviceTargeting = function(args) {
  this.targetingType = null;
  this.presetId = null;
  this.deviceDetail = null;
  if (args) {
    if (args.targetingType !== undefined) {
      this.targetingType = args.targetingType;
    }
    if (args.presetId !== undefined) {
      this.presetId = args.presetId;
    }
    if (args.deviceDetail !== undefined) {
      this.deviceDetail = args.deviceDetail;
    }
  }
};
AdvDeviceTargeting.prototype = {};
AdvDeviceTargeting.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.targetingType = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I32) {
        this.presetId = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.deviceDetail = new AdvertiserModel_ttypes.AdvDeviceDetail();
        this.deviceDetail.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AdvDeviceTargeting.prototype.write = function(output) {
  output.writeStructBegin('AdvDeviceTargeting');
  if (this.targetingType !== null && this.targetingType !== undefined) {
    output.writeFieldBegin('targetingType', Thrift.Type.I32, 1);
    output.writeI32(this.targetingType);
    output.writeFieldEnd();
  }
  if (this.presetId !== null && this.presetId !== undefined) {
    output.writeFieldBegin('presetId', Thrift.Type.I32, 2);
    output.writeI32(this.presetId);
    output.writeFieldEnd();
  }
  if (this.deviceDetail !== null && this.deviceDetail !== undefined) {
    output.writeFieldBegin('deviceDetail', Thrift.Type.STRUCT, 3);
    this.deviceDetail.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

AdvBrowserTargeting = module.exports.AdvBrowserTargeting = function(args) {
  this.browsers = null;
  if (args) {
    if (args.browsers !== undefined) {
      this.browsers = args.browsers;
    }
  }
};
AdvBrowserTargeting.prototype = {};
AdvBrowserTargeting.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.LIST) {
        var _size8 = 0;
        var _rtmp312;
        this.browsers = [];
        var _etype11 = 0;
        _rtmp312 = input.readListBegin();
        _etype11 = _rtmp312.etype;
        _size8 = _rtmp312.size;
        for (var _i13 = 0; _i13 < _size8; ++_i13)
        {
          var elem14 = null;
          elem14 = new AdvertiserModel_ttypes.AdvBrowser();
          elem14.read(input);
          this.browsers.push(elem14);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AdvBrowserTargeting.prototype.write = function(output) {
  output.writeStructBegin('AdvBrowserTargeting');
  if (this.browsers !== null && this.browsers !== undefined) {
    output.writeFieldBegin('browsers', Thrift.Type.LIST, 1);
    output.writeListBegin(Thrift.Type.STRUCT, this.browsers.length);
    for (var iter15 in this.browsers)
    {
      if (this.browsers.hasOwnProperty(iter15))
      {
        iter15 = this.browsers[iter15];
        iter15.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

AdvDemogTargeting = module.exports.AdvDemogTargeting = function(args) {
  this.gender = null;
  this.ageRangeIds = null;
  if (args) {
    if (args.gender !== undefined) {
      this.gender = args.gender;
    }
    if (args.ageRangeIds !== undefined) {
      this.ageRangeIds = args.ageRangeIds;
    }
  }
};
AdvDemogTargeting.prototype = {};
AdvDemogTargeting.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.gender = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.LIST) {
        var _size16 = 0;
        var _rtmp320;
        this.ageRangeIds = [];
        var _etype19 = 0;
        _rtmp320 = input.readListBegin();
        _etype19 = _rtmp320.etype;
        _size16 = _rtmp320.size;
        for (var _i21 = 0; _i21 < _size16; ++_i21)
        {
          var elem22 = null;
          elem22 = input.readI32();
          this.ageRangeIds.push(elem22);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AdvDemogTargeting.prototype.write = function(output) {
  output.writeStructBegin('AdvDemogTargeting');
  if (this.gender !== null && this.gender !== undefined) {
    output.writeFieldBegin('gender', Thrift.Type.I32, 1);
    output.writeI32(this.gender);
    output.writeFieldEnd();
  }
  if (this.ageRangeIds !== null && this.ageRangeIds !== undefined) {
    output.writeFieldBegin('ageRangeIds', Thrift.Type.LIST, 2);
    output.writeListBegin(Thrift.Type.I32, this.ageRangeIds.length);
    for (var iter23 in this.ageRangeIds)
    {
      if (this.ageRangeIds.hasOwnProperty(iter23))
      {
        iter23 = this.ageRangeIds[iter23];
        output.writeI32(iter23);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

AdvScheduleTargeting = module.exports.AdvScheduleTargeting = function(args) {
  this.schedules = null;
  if (args) {
    if (args.schedules !== undefined) {
      this.schedules = args.schedules;
    }
  }
};
AdvScheduleTargeting.prototype = {};
AdvScheduleTargeting.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.LIST) {
        var _size24 = 0;
        var _rtmp328;
        this.schedules = [];
        var _etype27 = 0;
        _rtmp328 = input.readListBegin();
        _etype27 = _rtmp328.etype;
        _size24 = _rtmp328.size;
        for (var _i29 = 0; _i29 < _size24; ++_i29)
        {
          var elem30 = null;
          elem30 = new AdvertiserModel_ttypes.AdvSchedule();
          elem30.read(input);
          this.schedules.push(elem30);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AdvScheduleTargeting.prototype.write = function(output) {
  output.writeStructBegin('AdvScheduleTargeting');
  if (this.schedules !== null && this.schedules !== undefined) {
    output.writeFieldBegin('schedules', Thrift.Type.LIST, 1);
    output.writeListBegin(Thrift.Type.STRUCT, this.schedules.length);
    for (var iter31 in this.schedules)
    {
      if (this.schedules.hasOwnProperty(iter31))
      {
        iter31 = this.schedules[iter31];
        iter31.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

AdvAdGroupTargeting = module.exports.AdvAdGroupTargeting = function(args) {
  this.geoTargeting = null;
  this.deviceTargeting = null;
  this.demogTargeting = null;
  this.scheduleTargeting = null;
  this.browserTargeting = null;
  this.domains = null;
  if (args) {
    if (args.geoTargeting !== undefined) {
      this.geoTargeting = args.geoTargeting;
    }
    if (args.deviceTargeting !== undefined) {
      this.deviceTargeting = args.deviceTargeting;
    }
    if (args.demogTargeting !== undefined) {
      this.demogTargeting = args.demogTargeting;
    }
    if (args.scheduleTargeting !== undefined) {
      this.scheduleTargeting = args.scheduleTargeting;
    }
    if (args.browserTargeting !== undefined) {
      this.browserTargeting = args.browserTargeting;
    }
    if (args.domains !== undefined) {
      this.domains = args.domains;
    }
  }
};
AdvAdGroupTargeting.prototype = {};
AdvAdGroupTargeting.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.geoTargeting = new ttypes.AdvGeoCarrierTargeting();
        this.geoTargeting.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.deviceTargeting = new ttypes.AdvDeviceTargeting();
        this.deviceTargeting.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.demogTargeting = new ttypes.AdvDemogTargeting();
        this.demogTargeting.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.STRUCT) {
        this.scheduleTargeting = new ttypes.AdvScheduleTargeting();
        this.scheduleTargeting.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 5:
      if (ftype == Thrift.Type.STRUCT) {
        this.browserTargeting = new ttypes.AdvBrowserTargeting();
        this.browserTargeting.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 6:
      if (ftype == Thrift.Type.LIST) {
        var _size32 = 0;
        var _rtmp336;
        this.domains = [];
        var _etype35 = 0;
        _rtmp336 = input.readListBegin();
        _etype35 = _rtmp336.etype;
        _size32 = _rtmp336.size;
        for (var _i37 = 0; _i37 < _size32; ++_i37)
        {
          var elem38 = null;
          elem38 = input.readI32();
          this.domains.push(elem38);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AdvAdGroupTargeting.prototype.write = function(output) {
  output.writeStructBegin('AdvAdGroupTargeting');
  if (this.geoTargeting !== null && this.geoTargeting !== undefined) {
    output.writeFieldBegin('geoTargeting', Thrift.Type.STRUCT, 1);
    this.geoTargeting.write(output);
    output.writeFieldEnd();
  }
  if (this.deviceTargeting !== null && this.deviceTargeting !== undefined) {
    output.writeFieldBegin('deviceTargeting', Thrift.Type.STRUCT, 2);
    this.deviceTargeting.write(output);
    output.writeFieldEnd();
  }
  if (this.demogTargeting !== null && this.demogTargeting !== undefined) {
    output.writeFieldBegin('demogTargeting', Thrift.Type.STRUCT, 3);
    this.demogTargeting.write(output);
    output.writeFieldEnd();
  }
  if (this.scheduleTargeting !== null && this.scheduleTargeting !== undefined) {
    output.writeFieldBegin('scheduleTargeting', Thrift.Type.STRUCT, 4);
    this.scheduleTargeting.write(output);
    output.writeFieldEnd();
  }
  if (this.browserTargeting !== null && this.browserTargeting !== undefined) {
    output.writeFieldBegin('browserTargeting', Thrift.Type.STRUCT, 5);
    this.browserTargeting.write(output);
    output.writeFieldEnd();
  }
  if (this.domains !== null && this.domains !== undefined) {
    output.writeFieldBegin('domains', Thrift.Type.LIST, 6);
    output.writeListBegin(Thrift.Type.I32, this.domains.length);
    for (var iter39 in this.domains)
    {
      if (this.domains.hasOwnProperty(iter39))
      {
        iter39 = this.domains[iter39];
        output.writeI32(iter39);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

AdvAdGroup = module.exports.AdvAdGroup = function(args) {
  this.accountId = null;
  this.campaignId = null;
  this.adGroupBasic = null;
  this.adGroupTargeting = null;
  this.adGroupPricing = null;
  if (args) {
    if (args.accountId !== undefined) {
      this.accountId = args.accountId;
    }
    if (args.campaignId !== undefined) {
      this.campaignId = args.campaignId;
    }
    if (args.adGroupBasic !== undefined) {
      this.adGroupBasic = args.adGroupBasic;
    }
    if (args.adGroupTargeting !== undefined) {
      this.adGroupTargeting = args.adGroupTargeting;
    }
    if (args.adGroupPricing !== undefined) {
      this.adGroupPricing = args.adGroupPricing;
    }
  }
};
AdvAdGroup.prototype = {};
AdvAdGroup.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.accountId = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.campaignId = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.adGroupBasic = new AdvertiserModel_ttypes.AdvAdGroupBasic();
        this.adGroupBasic.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.STRUCT) {
        this.adGroupTargeting = new ttypes.AdvAdGroupTargeting();
        this.adGroupTargeting.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 5:
      if (ftype == Thrift.Type.STRUCT) {
        this.adGroupPricing = new AdvertiserModel_ttypes.AdvAdGroupPricing();
        this.adGroupPricing.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AdvAdGroup.prototype.write = function(output) {
  output.writeStructBegin('AdvAdGroup');
  if (this.accountId !== null && this.accountId !== undefined) {
    output.writeFieldBegin('accountId', Thrift.Type.STRING, 1);
    output.writeString(this.accountId);
    output.writeFieldEnd();
  }
  if (this.campaignId !== null && this.campaignId !== undefined) {
    output.writeFieldBegin('campaignId', Thrift.Type.STRING, 2);
    output.writeString(this.campaignId);
    output.writeFieldEnd();
  }
  if (this.adGroupBasic !== null && this.adGroupBasic !== undefined) {
    output.writeFieldBegin('adGroupBasic', Thrift.Type.STRUCT, 3);
    this.adGroupBasic.write(output);
    output.writeFieldEnd();
  }
  if (this.adGroupTargeting !== null && this.adGroupTargeting !== undefined) {
    output.writeFieldBegin('adGroupTargeting', Thrift.Type.STRUCT, 4);
    this.adGroupTargeting.write(output);
    output.writeFieldEnd();
  }
  if (this.adGroupPricing !== null && this.adGroupPricing !== undefined) {
    output.writeFieldBegin('adGroupPricing', Thrift.Type.STRUCT, 5);
    this.adGroupPricing.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

AdvAdGroupSummary = module.exports.AdvAdGroupSummary = function(args) {
  this.accountId = null;
  this.campaignId = null;
  this.adGroupId = null;
  this.adGroupName = null;
  this.status = null;
  if (args) {
    if (args.accountId !== undefined) {
      this.accountId = args.accountId;
    }
    if (args.campaignId !== undefined) {
      this.campaignId = args.campaignId;
    }
    if (args.adGroupId !== undefined) {
      this.adGroupId = args.adGroupId;
    }
    if (args.adGroupName !== undefined) {
      this.adGroupName = args.adGroupName;
    }
    if (args.status !== undefined) {
      this.status = args.status;
    }
  }
};
AdvAdGroupSummary.prototype = {};
AdvAdGroupSummary.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.accountId = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.campaignId = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.adGroupId = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.STRING) {
        this.adGroupName = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 5:
      if (ftype == Thrift.Type.I32) {
        this.status = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AdvAdGroupSummary.prototype.write = function(output) {
  output.writeStructBegin('AdvAdGroupSummary');
  if (this.accountId !== null && this.accountId !== undefined) {
    output.writeFieldBegin('accountId', Thrift.Type.STRING, 1);
    output.writeString(this.accountId);
    output.writeFieldEnd();
  }
  if (this.campaignId !== null && this.campaignId !== undefined) {
    output.writeFieldBegin('campaignId', Thrift.Type.STRING, 2);
    output.writeString(this.campaignId);
    output.writeFieldEnd();
  }
  if (this.adGroupId !== null && this.adGroupId !== undefined) {
    output.writeFieldBegin('adGroupId', Thrift.Type.STRING, 3);
    output.writeString(this.adGroupId);
    output.writeFieldEnd();
  }
  if (this.adGroupName !== null && this.adGroupName !== undefined) {
    output.writeFieldBegin('adGroupName', Thrift.Type.STRING, 4);
    output.writeString(this.adGroupName);
    output.writeFieldEnd();
  }
  if (this.status !== null && this.status !== undefined) {
    output.writeFieldBegin('status', Thrift.Type.I32, 5);
    output.writeI32(this.status);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

AdvAdGroupDetail = module.exports.AdvAdGroupDetail = function(args) {
  this.adGroup = null;
  this.adGroupId = null;
  this.status = null;
  this.createdOn = null;
  this.adCount = null;
  this.brandImageURL = null;
  if (args) {
    if (args.adGroup !== undefined) {
      this.adGroup = args.adGroup;
    }
    if (args.adGroupId !== undefined) {
      this.adGroupId = args.adGroupId;
    }
    if (args.status !== undefined) {
      this.status = args.status;
    }
    if (args.createdOn !== undefined) {
      this.createdOn = args.createdOn;
    }
    if (args.adCount !== undefined) {
      this.adCount = args.adCount;
    }
    if (args.brandImageURL !== undefined) {
      this.brandImageURL = args.brandImageURL;
    }
  }
};
AdvAdGroupDetail.prototype = {};
AdvAdGroupDetail.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.adGroup = new ttypes.AdvAdGroup();
        this.adGroup.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.adGroupId = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.I32) {
        this.status = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.STRUCT) {
        this.createdOn = new DemandModel_ttypes.DateTime();
        this.createdOn.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 5:
      if (ftype == Thrift.Type.I32) {
        this.adCount = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 6:
      if (ftype == Thrift.Type.STRING) {
        this.brandImageURL = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AdvAdGroupDetail.prototype.write = function(output) {
  output.writeStructBegin('AdvAdGroupDetail');
  if (this.adGroup !== null && this.adGroup !== undefined) {
    output.writeFieldBegin('adGroup', Thrift.Type.STRUCT, 1);
    this.adGroup.write(output);
    output.writeFieldEnd();
  }
  if (this.adGroupId !== null && this.adGroupId !== undefined) {
    output.writeFieldBegin('adGroupId', Thrift.Type.STRING, 2);
    output.writeString(this.adGroupId);
    output.writeFieldEnd();
  }
  if (this.status !== null && this.status !== undefined) {
    output.writeFieldBegin('status', Thrift.Type.I32, 3);
    output.writeI32(this.status);
    output.writeFieldEnd();
  }
  if (this.createdOn !== null && this.createdOn !== undefined) {
    output.writeFieldBegin('createdOn', Thrift.Type.STRUCT, 4);
    this.createdOn.write(output);
    output.writeFieldEnd();
  }
  if (this.adCount !== null && this.adCount !== undefined) {
    output.writeFieldBegin('adCount', Thrift.Type.I32, 5);
    output.writeI32(this.adCount);
    output.writeFieldEnd();
  }
  if (this.brandImageURL !== null && this.brandImageURL !== undefined) {
    output.writeFieldBegin('brandImageURL', Thrift.Type.STRING, 6);
    output.writeString(this.brandImageURL);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

AdvAdGroupSearchRequest = module.exports.AdvAdGroupSearchRequest = function(args) {
  this.baseSearchParam = null;
  this.campaignIds = null;
  this.statusInherited = null;
  if (args) {
    if (args.baseSearchParam !== undefined) {
      this.baseSearchParam = args.baseSearchParam;
    }
    if (args.campaignIds !== undefined) {
      this.campaignIds = args.campaignIds;
    }
    if (args.statusInherited !== undefined) {
      this.statusInherited = args.statusInherited;
    }
  }
};
AdvAdGroupSearchRequest.prototype = {};
AdvAdGroupSearchRequest.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.baseSearchParam = new DemandDTO_ttypes.BaseSearchParam();
        this.baseSearchParam.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.LIST) {
        var _size40 = 0;
        var _rtmp344;
        this.campaignIds = [];
        var _etype43 = 0;
        _rtmp344 = input.readListBegin();
        _etype43 = _rtmp344.etype;
        _size40 = _rtmp344.size;
        for (var _i45 = 0; _i45 < _size40; ++_i45)
        {
          var elem46 = null;
          elem46 = input.readString();
          this.campaignIds.push(elem46);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.BOOL) {
        this.statusInherited = input.readBool();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AdvAdGroupSearchRequest.prototype.write = function(output) {
  output.writeStructBegin('AdvAdGroupSearchRequest');
  if (this.baseSearchParam !== null && this.baseSearchParam !== undefined) {
    output.writeFieldBegin('baseSearchParam', Thrift.Type.STRUCT, 1);
    this.baseSearchParam.write(output);
    output.writeFieldEnd();
  }
  if (this.campaignIds !== null && this.campaignIds !== undefined) {
    output.writeFieldBegin('campaignIds', Thrift.Type.LIST, 2);
    output.writeListBegin(Thrift.Type.STRING, this.campaignIds.length);
    for (var iter47 in this.campaignIds)
    {
      if (this.campaignIds.hasOwnProperty(iter47))
      {
        iter47 = this.campaignIds[iter47];
        output.writeString(iter47);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.statusInherited !== null && this.statusInherited !== undefined) {
    output.writeFieldBegin('statusInherited', Thrift.Type.BOOL, 3);
    output.writeBool(this.statusInherited);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

AdvCopyAdGroupDetail = module.exports.AdvCopyAdGroupDetail = function(args) {
  this.accountId = null;
  this.destinationCampaignId = null;
  this.sourceAdGroupId = null;
  this.newAdGroupName = null;
  this.adIds = null;
  this.clickToAction = null;
  this.ctaProposition = null;
  if (args) {
    if (args.accountId !== undefined) {
      this.accountId = args.accountId;
    }
    if (args.destinationCampaignId !== undefined) {
      this.destinationCampaignId = args.destinationCampaignId;
    }
    if (args.sourceAdGroupId !== undefined) {
      this.sourceAdGroupId = args.sourceAdGroupId;
    }
    if (args.newAdGroupName !== undefined) {
      this.newAdGroupName = args.newAdGroupName;
    }
    if (args.adIds !== undefined) {
      this.adIds = args.adIds;
    }
    if (args.clickToAction !== undefined) {
      this.clickToAction = args.clickToAction;
    }
    if (args.ctaProposition !== undefined) {
      this.ctaProposition = args.ctaProposition;
    }
  }
};
AdvCopyAdGroupDetail.prototype = {};
AdvCopyAdGroupDetail.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.accountId = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.destinationCampaignId = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.sourceAdGroupId = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.STRING) {
        this.newAdGroupName = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 5:
      if (ftype == Thrift.Type.LIST) {
        var _size48 = 0;
        var _rtmp352;
        this.adIds = [];
        var _etype51 = 0;
        _rtmp352 = input.readListBegin();
        _etype51 = _rtmp352.etype;
        _size48 = _rtmp352.size;
        for (var _i53 = 0; _i53 < _size48; ++_i53)
        {
          var elem54 = null;
          elem54 = input.readString();
          this.adIds.push(elem54);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 6:
      if (ftype == Thrift.Type.I32) {
        this.clickToAction = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 7:
      if (ftype == Thrift.Type.STRING) {
        this.ctaProposition = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AdvCopyAdGroupDetail.prototype.write = function(output) {
  output.writeStructBegin('AdvCopyAdGroupDetail');
  if (this.accountId !== null && this.accountId !== undefined) {
    output.writeFieldBegin('accountId', Thrift.Type.STRING, 1);
    output.writeString(this.accountId);
    output.writeFieldEnd();
  }
  if (this.destinationCampaignId !== null && this.destinationCampaignId !== undefined) {
    output.writeFieldBegin('destinationCampaignId', Thrift.Type.STRING, 2);
    output.writeString(this.destinationCampaignId);
    output.writeFieldEnd();
  }
  if (this.sourceAdGroupId !== null && this.sourceAdGroupId !== undefined) {
    output.writeFieldBegin('sourceAdGroupId', Thrift.Type.STRING, 3);
    output.writeString(this.sourceAdGroupId);
    output.writeFieldEnd();
  }
  if (this.newAdGroupName !== null && this.newAdGroupName !== undefined) {
    output.writeFieldBegin('newAdGroupName', Thrift.Type.STRING, 4);
    output.writeString(this.newAdGroupName);
    output.writeFieldEnd();
  }
  if (this.adIds !== null && this.adIds !== undefined) {
    output.writeFieldBegin('adIds', Thrift.Type.LIST, 5);
    output.writeListBegin(Thrift.Type.STRING, this.adIds.length);
    for (var iter55 in this.adIds)
    {
      if (this.adIds.hasOwnProperty(iter55))
      {
        iter55 = this.adIds[iter55];
        output.writeString(iter55);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.clickToAction !== null && this.clickToAction !== undefined) {
    output.writeFieldBegin('clickToAction', Thrift.Type.I32, 6);
    output.writeI32(this.clickToAction);
    output.writeFieldEnd();
  }
  if (this.ctaProposition !== null && this.ctaProposition !== undefined) {
    output.writeFieldBegin('ctaProposition', Thrift.Type.STRING, 7);
    output.writeString(this.ctaProposition);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

AdvAdSummary = module.exports.AdvAdSummary = function(args) {
  this.accountId = null;
  this.campaignId = null;
  this.adGroupId = null;
  this.adId = null;
  this.adName = null;
  this.adFormat = null;
  this.contentId = null;
  this.status = null;
  if (args) {
    if (args.accountId !== undefined) {
      this.accountId = args.accountId;
    }
    if (args.campaignId !== undefined) {
      this.campaignId = args.campaignId;
    }
    if (args.adGroupId !== undefined) {
      this.adGroupId = args.adGroupId;
    }
    if (args.adId !== undefined) {
      this.adId = args.adId;
    }
    if (args.adName !== undefined) {
      this.adName = args.adName;
    }
    if (args.adFormat !== undefined) {
      this.adFormat = args.adFormat;
    }
    if (args.contentId !== undefined) {
      this.contentId = args.contentId;
    }
    if (args.status !== undefined) {
      this.status = args.status;
    }
  }
};
AdvAdSummary.prototype = {};
AdvAdSummary.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.accountId = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.campaignId = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.adGroupId = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.STRING) {
        this.adId = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 5:
      if (ftype == Thrift.Type.STRING) {
        this.adName = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 6:
      if (ftype == Thrift.Type.I32) {
        this.adFormat = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 7:
      if (ftype == Thrift.Type.STRING) {
        this.contentId = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 8:
      if (ftype == Thrift.Type.I32) {
        this.status = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AdvAdSummary.prototype.write = function(output) {
  output.writeStructBegin('AdvAdSummary');
  if (this.accountId !== null && this.accountId !== undefined) {
    output.writeFieldBegin('accountId', Thrift.Type.STRING, 1);
    output.writeString(this.accountId);
    output.writeFieldEnd();
  }
  if (this.campaignId !== null && this.campaignId !== undefined) {
    output.writeFieldBegin('campaignId', Thrift.Type.STRING, 2);
    output.writeString(this.campaignId);
    output.writeFieldEnd();
  }
  if (this.adGroupId !== null && this.adGroupId !== undefined) {
    output.writeFieldBegin('adGroupId', Thrift.Type.STRING, 3);
    output.writeString(this.adGroupId);
    output.writeFieldEnd();
  }
  if (this.adId !== null && this.adId !== undefined) {
    output.writeFieldBegin('adId', Thrift.Type.STRING, 4);
    output.writeString(this.adId);
    output.writeFieldEnd();
  }
  if (this.adName !== null && this.adName !== undefined) {
    output.writeFieldBegin('adName', Thrift.Type.STRING, 5);
    output.writeString(this.adName);
    output.writeFieldEnd();
  }
  if (this.adFormat !== null && this.adFormat !== undefined) {
    output.writeFieldBegin('adFormat', Thrift.Type.I32, 6);
    output.writeI32(this.adFormat);
    output.writeFieldEnd();
  }
  if (this.contentId !== null && this.contentId !== undefined) {
    output.writeFieldBegin('contentId', Thrift.Type.STRING, 7);
    output.writeString(this.contentId);
    output.writeFieldEnd();
  }
  if (this.status !== null && this.status !== undefined) {
    output.writeFieldBegin('status', Thrift.Type.I32, 8);
    output.writeI32(this.status);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

AdvBannerDetail = module.exports.AdvBannerDetail = function(args) {
  this.altText = null;
  this.previewURLs = null;
  if (args) {
    if (args.altText !== undefined) {
      this.altText = args.altText;
    }
    if (args.previewURLs !== undefined) {
      this.previewURLs = args.previewURLs;
    }
  }
};
AdvBannerDetail.prototype = {};
AdvBannerDetail.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.altText = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.MAP) {
        var _size56 = 0;
        var _rtmp360;
        this.previewURLs = {};
        var _ktype57 = 0;
        var _vtype58 = 0;
        _rtmp360 = input.readMapBegin();
        _ktype57 = _rtmp360.ktype;
        _vtype58 = _rtmp360.vtype;
        _size56 = _rtmp360.size;
        for (var _i61 = 0; _i61 < _size56; ++_i61)
        {
          var key62 = null;
          var val63 = null;
          key62 = input.readI32();
          val63 = input.readString();
          this.previewURLs[key62] = val63;
        }
        input.readMapEnd();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AdvBannerDetail.prototype.write = function(output) {
  output.writeStructBegin('AdvBannerDetail');
  if (this.altText !== null && this.altText !== undefined) {
    output.writeFieldBegin('altText', Thrift.Type.STRING, 1);
    output.writeString(this.altText);
    output.writeFieldEnd();
  }
  if (this.previewURLs !== null && this.previewURLs !== undefined) {
    output.writeFieldBegin('previewURLs', Thrift.Type.MAP, 2);
    output.writeMapBegin(Thrift.Type.I32, Thrift.Type.STRING, Thrift.objectLength(this.previewURLs));
    for (var kiter64 in this.previewURLs)
    {
      if (this.previewURLs.hasOwnProperty(kiter64))
      {
        var viter65 = this.previewURLs[kiter64];
        output.writeI32(kiter64);
        output.writeString(viter65);
      }
    }
    output.writeMapEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

AdvRMDetail = module.exports.AdvRMDetail = function(args) {
  this.altText = null;
  this.rmContent = null;
  if (args) {
    if (args.altText !== undefined) {
      this.altText = args.altText;
    }
    if (args.rmContent !== undefined) {
      this.rmContent = args.rmContent;
    }
  }
};
AdvRMDetail.prototype = {};
AdvRMDetail.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.altText = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.rmContent = new AdvertiserModel_ttypes.AdvRMContent();
        this.rmContent.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AdvRMDetail.prototype.write = function(output) {
  output.writeStructBegin('AdvRMDetail');
  if (this.altText !== null && this.altText !== undefined) {
    output.writeFieldBegin('altText', Thrift.Type.STRING, 1);
    output.writeString(this.altText);
    output.writeFieldEnd();
  }
  if (this.rmContent !== null && this.rmContent !== undefined) {
    output.writeFieldBegin('rmContent', Thrift.Type.STRUCT, 2);
    this.rmContent.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

AdvBanner = module.exports.AdvBanner = function(args) {
  this.fileName = null;
  this.previewURL = null;
  this.slotId = null;
  if (args) {
    if (args.fileName !== undefined) {
      this.fileName = args.fileName;
    }
    if (args.previewURL !== undefined) {
      this.previewURL = args.previewURL;
    }
    if (args.slotId !== undefined) {
      this.slotId = args.slotId;
    }
  }
};
AdvBanner.prototype = {};
AdvBanner.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.fileName = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.previewURL = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.I32) {
        this.slotId = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AdvBanner.prototype.write = function(output) {
  output.writeStructBegin('AdvBanner');
  if (this.fileName !== null && this.fileName !== undefined) {
    output.writeFieldBegin('fileName', Thrift.Type.STRING, 1);
    output.writeString(this.fileName);
    output.writeFieldEnd();
  }
  if (this.previewURL !== null && this.previewURL !== undefined) {
    output.writeFieldBegin('previewURL', Thrift.Type.STRING, 2);
    output.writeString(this.previewURL);
    output.writeFieldEnd();
  }
  if (this.slotId !== null && this.slotId !== undefined) {
    output.writeFieldBegin('slotId', Thrift.Type.I32, 3);
    output.writeI32(this.slotId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

AdvBannerContentDetail = module.exports.AdvBannerContentDetail = function(args) {
  this.contentId = null;
  this.bannerDetails = null;
  if (args) {
    if (args.contentId !== undefined) {
      this.contentId = args.contentId;
    }
    if (args.bannerDetails !== undefined) {
      this.bannerDetails = args.bannerDetails;
    }
  }
};
AdvBannerContentDetail.prototype = {};
AdvBannerContentDetail.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.contentId = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.LIST) {
        var _size66 = 0;
        var _rtmp370;
        this.bannerDetails = [];
        var _etype69 = 0;
        _rtmp370 = input.readListBegin();
        _etype69 = _rtmp370.etype;
        _size66 = _rtmp370.size;
        for (var _i71 = 0; _i71 < _size66; ++_i71)
        {
          var elem72 = null;
          elem72 = new ttypes.AdvBanner();
          elem72.read(input);
          this.bannerDetails.push(elem72);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AdvBannerContentDetail.prototype.write = function(output) {
  output.writeStructBegin('AdvBannerContentDetail');
  if (this.contentId !== null && this.contentId !== undefined) {
    output.writeFieldBegin('contentId', Thrift.Type.STRING, 1);
    output.writeString(this.contentId);
    output.writeFieldEnd();
  }
  if (this.bannerDetails !== null && this.bannerDetails !== undefined) {
    output.writeFieldBegin('bannerDetails', Thrift.Type.LIST, 2);
    output.writeListBegin(Thrift.Type.STRUCT, this.bannerDetails.length);
    for (var iter73 in this.bannerDetails)
    {
      if (this.bannerDetails.hasOwnProperty(iter73))
      {
        iter73 = this.bannerDetails[iter73];
        iter73.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

AdvRMContentDetail = module.exports.AdvRMContentDetail = function(args) {
  this.contentId = null;
  this.rmContent = null;
  this.adGroupLandingURL = null;
  if (args) {
    if (args.contentId !== undefined) {
      this.contentId = args.contentId;
    }
    if (args.rmContent !== undefined) {
      this.rmContent = args.rmContent;
    }
    if (args.adGroupLandingURL !== undefined) {
      this.adGroupLandingURL = args.adGroupLandingURL;
    }
  }
};
AdvRMContentDetail.prototype = {};
AdvRMContentDetail.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.contentId = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.rmContent = new AdvertiserModel_ttypes.AdvRMContent();
        this.rmContent.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.adGroupLandingURL = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AdvRMContentDetail.prototype.write = function(output) {
  output.writeStructBegin('AdvRMContentDetail');
  if (this.contentId !== null && this.contentId !== undefined) {
    output.writeFieldBegin('contentId', Thrift.Type.STRING, 1);
    output.writeString(this.contentId);
    output.writeFieldEnd();
  }
  if (this.rmContent !== null && this.rmContent !== undefined) {
    output.writeFieldBegin('rmContent', Thrift.Type.STRUCT, 2);
    this.rmContent.write(output);
    output.writeFieldEnd();
  }
  if (this.adGroupLandingURL !== null && this.adGroupLandingURL !== undefined) {
    output.writeFieldBegin('adGroupLandingURL', Thrift.Type.STRING, 3);
    output.writeString(this.adGroupLandingURL);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

AdvAdSearchRequest = module.exports.AdvAdSearchRequest = function(args) {
  this.baseSearchParam = null;
  this.campaignIds = null;
  this.adGroupIds = null;
  this.statusInherited = null;
  if (args) {
    if (args.baseSearchParam !== undefined) {
      this.baseSearchParam = args.baseSearchParam;
    }
    if (args.campaignIds !== undefined) {
      this.campaignIds = args.campaignIds;
    }
    if (args.adGroupIds !== undefined) {
      this.adGroupIds = args.adGroupIds;
    }
    if (args.statusInherited !== undefined) {
      this.statusInherited = args.statusInherited;
    }
  }
};
AdvAdSearchRequest.prototype = {};
AdvAdSearchRequest.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.baseSearchParam = new DemandDTO_ttypes.BaseSearchParam();
        this.baseSearchParam.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.LIST) {
        var _size74 = 0;
        var _rtmp378;
        this.campaignIds = [];
        var _etype77 = 0;
        _rtmp378 = input.readListBegin();
        _etype77 = _rtmp378.etype;
        _size74 = _rtmp378.size;
        for (var _i79 = 0; _i79 < _size74; ++_i79)
        {
          var elem80 = null;
          elem80 = input.readString();
          this.campaignIds.push(elem80);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.LIST) {
        var _size81 = 0;
        var _rtmp385;
        this.adGroupIds = [];
        var _etype84 = 0;
        _rtmp385 = input.readListBegin();
        _etype84 = _rtmp385.etype;
        _size81 = _rtmp385.size;
        for (var _i86 = 0; _i86 < _size81; ++_i86)
        {
          var elem87 = null;
          elem87 = input.readString();
          this.adGroupIds.push(elem87);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.BOOL) {
        this.statusInherited = input.readBool();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AdvAdSearchRequest.prototype.write = function(output) {
  output.writeStructBegin('AdvAdSearchRequest');
  if (this.baseSearchParam !== null && this.baseSearchParam !== undefined) {
    output.writeFieldBegin('baseSearchParam', Thrift.Type.STRUCT, 1);
    this.baseSearchParam.write(output);
    output.writeFieldEnd();
  }
  if (this.campaignIds !== null && this.campaignIds !== undefined) {
    output.writeFieldBegin('campaignIds', Thrift.Type.LIST, 2);
    output.writeListBegin(Thrift.Type.STRING, this.campaignIds.length);
    for (var iter88 in this.campaignIds)
    {
      if (this.campaignIds.hasOwnProperty(iter88))
      {
        iter88 = this.campaignIds[iter88];
        output.writeString(iter88);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.adGroupIds !== null && this.adGroupIds !== undefined) {
    output.writeFieldBegin('adGroupIds', Thrift.Type.LIST, 3);
    output.writeListBegin(Thrift.Type.STRING, this.adGroupIds.length);
    for (var iter89 in this.adGroupIds)
    {
      if (this.adGroupIds.hasOwnProperty(iter89))
      {
        iter89 = this.adGroupIds[iter89];
        output.writeString(iter89);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.statusInherited !== null && this.statusInherited !== undefined) {
    output.writeFieldBegin('statusInherited', Thrift.Type.BOOL, 4);
    output.writeBool(this.statusInherited);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

AdvAdDetail = module.exports.AdvAdDetail = function(args) {
  this.adBasic = null;
  this.accountId = null;
  this.campaignId = null;
  this.adId = null;
  this.status = null;
  this.createdOn = null;
  this.simpleAdValue = null;
  this.bannerDetail = null;
  this.rmDetail = null;
  if (args) {
    if (args.adBasic !== undefined) {
      this.adBasic = args.adBasic;
    }
    if (args.accountId !== undefined) {
      this.accountId = args.accountId;
    }
    if (args.campaignId !== undefined) {
      this.campaignId = args.campaignId;
    }
    if (args.adId !== undefined) {
      this.adId = args.adId;
    }
    if (args.status !== undefined) {
      this.status = args.status;
    }
    if (args.createdOn !== undefined) {
      this.createdOn = args.createdOn;
    }
    if (args.simpleAdValue !== undefined) {
      this.simpleAdValue = args.simpleAdValue;
    }
    if (args.bannerDetail !== undefined) {
      this.bannerDetail = args.bannerDetail;
    }
    if (args.rmDetail !== undefined) {
      this.rmDetail = args.rmDetail;
    }
  }
};
AdvAdDetail.prototype = {};
AdvAdDetail.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.adBasic = new AdvertiserModel_ttypes.AdvAdBasic();
        this.adBasic.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.accountId = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.campaignId = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.STRING) {
        this.adId = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 5:
      if (ftype == Thrift.Type.I32) {
        this.status = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 6:
      if (ftype == Thrift.Type.STRUCT) {
        this.createdOn = new DemandModel_ttypes.DateTime();
        this.createdOn.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 7:
      if (ftype == Thrift.Type.STRING) {
        this.simpleAdValue = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 8:
      if (ftype == Thrift.Type.STRUCT) {
        this.bannerDetail = new ttypes.AdvBannerDetail();
        this.bannerDetail.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 9:
      if (ftype == Thrift.Type.STRUCT) {
        this.rmDetail = new ttypes.AdvRMDetail();
        this.rmDetail.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AdvAdDetail.prototype.write = function(output) {
  output.writeStructBegin('AdvAdDetail');
  if (this.adBasic !== null && this.adBasic !== undefined) {
    output.writeFieldBegin('adBasic', Thrift.Type.STRUCT, 1);
    this.adBasic.write(output);
    output.writeFieldEnd();
  }
  if (this.accountId !== null && this.accountId !== undefined) {
    output.writeFieldBegin('accountId', Thrift.Type.STRING, 2);
    output.writeString(this.accountId);
    output.writeFieldEnd();
  }
  if (this.campaignId !== null && this.campaignId !== undefined) {
    output.writeFieldBegin('campaignId', Thrift.Type.STRING, 3);
    output.writeString(this.campaignId);
    output.writeFieldEnd();
  }
  if (this.adId !== null && this.adId !== undefined) {
    output.writeFieldBegin('adId', Thrift.Type.STRING, 4);
    output.writeString(this.adId);
    output.writeFieldEnd();
  }
  if (this.status !== null && this.status !== undefined) {
    output.writeFieldBegin('status', Thrift.Type.I32, 5);
    output.writeI32(this.status);
    output.writeFieldEnd();
  }
  if (this.createdOn !== null && this.createdOn !== undefined) {
    output.writeFieldBegin('createdOn', Thrift.Type.STRUCT, 6);
    this.createdOn.write(output);
    output.writeFieldEnd();
  }
  if (this.simpleAdValue !== null && this.simpleAdValue !== undefined) {
    output.writeFieldBegin('simpleAdValue', Thrift.Type.STRING, 7);
    output.writeString(this.simpleAdValue);
    output.writeFieldEnd();
  }
  if (this.bannerDetail !== null && this.bannerDetail !== undefined) {
    output.writeFieldBegin('bannerDetail', Thrift.Type.STRUCT, 8);
    this.bannerDetail.write(output);
    output.writeFieldEnd();
  }
  if (this.rmDetail !== null && this.rmDetail !== undefined) {
    output.writeFieldBegin('rmDetail', Thrift.Type.STRUCT, 9);
    this.rmDetail.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

AdvLandingUrlDetail = module.exports.AdvLandingUrlDetail = function(args) {
  this.landingUrl = null;
  this.appId = null;
  this.platformId = null;
  if (args) {
    if (args.landingUrl !== undefined) {
      this.landingUrl = args.landingUrl;
    }
    if (args.appId !== undefined) {
      this.appId = args.appId;
    }
    if (args.platformId !== undefined) {
      this.platformId = args.platformId;
    }
  }
};
AdvLandingUrlDetail.prototype = {};
AdvLandingUrlDetail.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.landingUrl = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.appId = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.I32) {
        this.platformId = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AdvLandingUrlDetail.prototype.write = function(output) {
  output.writeStructBegin('AdvLandingUrlDetail');
  if (this.landingUrl !== null && this.landingUrl !== undefined) {
    output.writeFieldBegin('landingUrl', Thrift.Type.STRING, 1);
    output.writeString(this.landingUrl);
    output.writeFieldEnd();
  }
  if (this.appId !== null && this.appId !== undefined) {
    output.writeFieldBegin('appId', Thrift.Type.STRING, 2);
    output.writeString(this.appId);
    output.writeFieldEnd();
  }
  if (this.platformId !== null && this.platformId !== undefined) {
    output.writeFieldBegin('platformId', Thrift.Type.I32, 3);
    output.writeI32(this.platformId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

AdvSupportedBrowserQueryParam = module.exports.AdvSupportedBrowserQueryParam = function(args) {
  this.osIds = null;
  this.manufIds = null;
  this.deviceIds = null;
  this.deviceTypeIds = null;
  this.platformId = null;
  if (args) {
    if (args.osIds !== undefined) {
      this.osIds = args.osIds;
    }
    if (args.manufIds !== undefined) {
      this.manufIds = args.manufIds;
    }
    if (args.deviceIds !== undefined) {
      this.deviceIds = args.deviceIds;
    }
    if (args.deviceTypeIds !== undefined) {
      this.deviceTypeIds = args.deviceTypeIds;
    }
    if (args.platformId !== undefined) {
      this.platformId = args.platformId;
    }
  }
};
AdvSupportedBrowserQueryParam.prototype = {};
AdvSupportedBrowserQueryParam.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.LIST) {
        var _size90 = 0;
        var _rtmp394;
        this.osIds = [];
        var _etype93 = 0;
        _rtmp394 = input.readListBegin();
        _etype93 = _rtmp394.etype;
        _size90 = _rtmp394.size;
        for (var _i95 = 0; _i95 < _size90; ++_i95)
        {
          var elem96 = null;
          elem96 = input.readI32();
          this.osIds.push(elem96);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.LIST) {
        var _size97 = 0;
        var _rtmp3101;
        this.manufIds = [];
        var _etype100 = 0;
        _rtmp3101 = input.readListBegin();
        _etype100 = _rtmp3101.etype;
        _size97 = _rtmp3101.size;
        for (var _i102 = 0; _i102 < _size97; ++_i102)
        {
          var elem103 = null;
          elem103 = input.readI32();
          this.manufIds.push(elem103);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.LIST) {
        var _size104 = 0;
        var _rtmp3108;
        this.deviceIds = [];
        var _etype107 = 0;
        _rtmp3108 = input.readListBegin();
        _etype107 = _rtmp3108.etype;
        _size104 = _rtmp3108.size;
        for (var _i109 = 0; _i109 < _size104; ++_i109)
        {
          var elem110 = null;
          elem110 = input.readI32();
          this.deviceIds.push(elem110);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.LIST) {
        var _size111 = 0;
        var _rtmp3115;
        this.deviceTypeIds = [];
        var _etype114 = 0;
        _rtmp3115 = input.readListBegin();
        _etype114 = _rtmp3115.etype;
        _size111 = _rtmp3115.size;
        for (var _i116 = 0; _i116 < _size111; ++_i116)
        {
          var elem117 = null;
          elem117 = input.readI32();
          this.deviceTypeIds.push(elem117);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 5:
      if (ftype == Thrift.Type.I32) {
        this.platformId = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AdvSupportedBrowserQueryParam.prototype.write = function(output) {
  output.writeStructBegin('AdvSupportedBrowserQueryParam');
  if (this.osIds !== null && this.osIds !== undefined) {
    output.writeFieldBegin('osIds', Thrift.Type.LIST, 1);
    output.writeListBegin(Thrift.Type.I32, this.osIds.length);
    for (var iter118 in this.osIds)
    {
      if (this.osIds.hasOwnProperty(iter118))
      {
        iter118 = this.osIds[iter118];
        output.writeI32(iter118);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.manufIds !== null && this.manufIds !== undefined) {
    output.writeFieldBegin('manufIds', Thrift.Type.LIST, 2);
    output.writeListBegin(Thrift.Type.I32, this.manufIds.length);
    for (var iter119 in this.manufIds)
    {
      if (this.manufIds.hasOwnProperty(iter119))
      {
        iter119 = this.manufIds[iter119];
        output.writeI32(iter119);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.deviceIds !== null && this.deviceIds !== undefined) {
    output.writeFieldBegin('deviceIds', Thrift.Type.LIST, 3);
    output.writeListBegin(Thrift.Type.I32, this.deviceIds.length);
    for (var iter120 in this.deviceIds)
    {
      if (this.deviceIds.hasOwnProperty(iter120))
      {
        iter120 = this.deviceIds[iter120];
        output.writeI32(iter120);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.deviceTypeIds !== null && this.deviceTypeIds !== undefined) {
    output.writeFieldBegin('deviceTypeIds', Thrift.Type.LIST, 4);
    output.writeListBegin(Thrift.Type.I32, this.deviceTypeIds.length);
    for (var iter121 in this.deviceTypeIds)
    {
      if (this.deviceTypeIds.hasOwnProperty(iter121))
      {
        iter121 = this.deviceTypeIds[iter121];
        output.writeI32(iter121);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.platformId !== null && this.platformId !== undefined) {
    output.writeFieldBegin('platformId', Thrift.Type.I32, 5);
    output.writeI32(this.platformId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

AdvIdNamePair = module.exports.AdvIdNamePair = function(args) {
  this.id = null;
  this.name = null;
  if (args) {
    if (args.id !== undefined) {
      this.id = args.id;
    }
    if (args.name !== undefined) {
      this.name = args.name;
    }
  }
};
AdvIdNamePair.prototype = {};
AdvIdNamePair.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.id = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.name = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AdvIdNamePair.prototype.write = function(output) {
  output.writeStructBegin('AdvIdNamePair');
  if (this.id !== null && this.id !== undefined) {
    output.writeFieldBegin('id', Thrift.Type.I32, 1);
    output.writeI32(this.id);
    output.writeFieldEnd();
  }
  if (this.name !== null && this.name !== undefined) {
    output.writeFieldBegin('name', Thrift.Type.STRING, 2);
    output.writeString(this.name);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

AdvHandsetDTO = module.exports.AdvHandsetDTO = function(args) {
  this.id = null;
  this.name = null;
  this.description = null;
  this.marketingName = null;
  this.modelName = null;
  this.manufacturerId = null;
  if (args) {
    if (args.id !== undefined) {
      this.id = args.id;
    }
    if (args.name !== undefined) {
      this.name = args.name;
    }
    if (args.description !== undefined) {
      this.description = args.description;
    }
    if (args.marketingName !== undefined) {
      this.marketingName = args.marketingName;
    }
    if (args.modelName !== undefined) {
      this.modelName = args.modelName;
    }
    if (args.manufacturerId !== undefined) {
      this.manufacturerId = args.manufacturerId;
    }
  }
};
AdvHandsetDTO.prototype = {};
AdvHandsetDTO.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.id = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.name = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.description = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.STRING) {
        this.marketingName = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 5:
      if (ftype == Thrift.Type.STRING) {
        this.modelName = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 6:
      if (ftype == Thrift.Type.I64) {
        this.manufacturerId = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AdvHandsetDTO.prototype.write = function(output) {
  output.writeStructBegin('AdvHandsetDTO');
  if (this.id !== null && this.id !== undefined) {
    output.writeFieldBegin('id', Thrift.Type.I32, 1);
    output.writeI32(this.id);
    output.writeFieldEnd();
  }
  if (this.name !== null && this.name !== undefined) {
    output.writeFieldBegin('name', Thrift.Type.STRING, 2);
    output.writeString(this.name);
    output.writeFieldEnd();
  }
  if (this.description !== null && this.description !== undefined) {
    output.writeFieldBegin('description', Thrift.Type.STRING, 3);
    output.writeString(this.description);
    output.writeFieldEnd();
  }
  if (this.marketingName !== null && this.marketingName !== undefined) {
    output.writeFieldBegin('marketingName', Thrift.Type.STRING, 4);
    output.writeString(this.marketingName);
    output.writeFieldEnd();
  }
  if (this.modelName !== null && this.modelName !== undefined) {
    output.writeFieldBegin('modelName', Thrift.Type.STRING, 5);
    output.writeString(this.modelName);
    output.writeFieldEnd();
  }
  if (this.manufacturerId !== null && this.manufacturerId !== undefined) {
    output.writeFieldBegin('manufacturerId', Thrift.Type.I64, 6);
    output.writeI64(this.manufacturerId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};


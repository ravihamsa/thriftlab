//
// Autogenerated by Thrift Compiler (0.9.0)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//
var Thrift = require('thrift').Thrift;
var ttypes = module.exports = {};
ttypes.SortOrder = {
'ASC' : 1,
'DESC' : 2
};
ttypes.SortField = {
'NAME' : 1,
'STATUS' : 2,
'LAST_MODIFIED_TIME' : 3
};
ttypes.MatchMode = {
'EXACT' : 1,
'ENDS_WITH' : 2,
'STARTS_WITH' : 3,
'ANY_WHERE' : 4
};
DateRange = module.exports.DateRange = function(args) {
  this.startDate = null;
  this.endDate = null;
  if (args) {
    if (args.startDate !== undefined) {
      this.startDate = args.startDate;
    }
    if (args.endDate !== undefined) {
      this.endDate = args.endDate;
    }
  }
};
DateRange.prototype = {};
DateRange.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.startDate = new DemandModel_ttypes.DateTime();
        this.startDate.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.endDate = new DemandModel_ttypes.DateTime();
        this.endDate.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

DateRange.prototype.write = function(output) {
  output.writeStructBegin('DateRange');
  if (this.startDate !== null && this.startDate !== undefined) {
    output.writeFieldBegin('startDate', Thrift.Type.STRUCT, 1);
    this.startDate.write(output);
    output.writeFieldEnd();
  }
  if (this.endDate !== null && this.endDate !== undefined) {
    output.writeFieldBegin('endDate', Thrift.Type.STRUCT, 2);
    this.endDate.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

CampaignDetail = module.exports.CampaignDetail = function(args) {
  this.campaign = null;
  this.campaignId = null;
  this.incId = null;
  this.status = null;
  this.createdOn = null;
  this.lastModifiedOn = null;
  this.balance = null;
  this.previousStatus = null;
  if (args) {
    if (args.campaign !== undefined) {
      this.campaign = args.campaign;
    }
    if (args.campaignId !== undefined) {
      this.campaignId = args.campaignId;
    }
    if (args.incId !== undefined) {
      this.incId = args.incId;
    }
    if (args.status !== undefined) {
      this.status = args.status;
    }
    if (args.createdOn !== undefined) {
      this.createdOn = args.createdOn;
    }
    if (args.lastModifiedOn !== undefined) {
      this.lastModifiedOn = args.lastModifiedOn;
    }
    if (args.balance !== undefined) {
      this.balance = args.balance;
    }
    if (args.previousStatus !== undefined) {
      this.previousStatus = args.previousStatus;
    }
  }
};
CampaignDetail.prototype = {};
CampaignDetail.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.campaign = new DemandModel_ttypes.Campaign();
        this.campaign.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.campaignId = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.I32) {
        this.incId = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.I32) {
        this.status = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 5:
      if (ftype == Thrift.Type.STRUCT) {
        this.createdOn = new DemandModel_ttypes.DateTime();
        this.createdOn.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 6:
      if (ftype == Thrift.Type.STRUCT) {
        this.lastModifiedOn = new DemandModel_ttypes.DateTime();
        this.lastModifiedOn.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 7:
      if (ftype == Thrift.Type.DOUBLE) {
        this.balance = input.readDouble();
      } else {
        input.skip(ftype);
      }
      break;
      case 8:
      if (ftype == Thrift.Type.I32) {
        this.previousStatus = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CampaignDetail.prototype.write = function(output) {
  output.writeStructBegin('CampaignDetail');
  if (this.campaign !== null && this.campaign !== undefined) {
    output.writeFieldBegin('campaign', Thrift.Type.STRUCT, 1);
    this.campaign.write(output);
    output.writeFieldEnd();
  }
  if (this.campaignId !== null && this.campaignId !== undefined) {
    output.writeFieldBegin('campaignId', Thrift.Type.STRING, 2);
    output.writeString(this.campaignId);
    output.writeFieldEnd();
  }
  if (this.incId !== null && this.incId !== undefined) {
    output.writeFieldBegin('incId', Thrift.Type.I32, 3);
    output.writeI32(this.incId);
    output.writeFieldEnd();
  }
  if (this.status !== null && this.status !== undefined) {
    output.writeFieldBegin('status', Thrift.Type.I32, 4);
    output.writeI32(this.status);
    output.writeFieldEnd();
  }
  if (this.createdOn !== null && this.createdOn !== undefined) {
    output.writeFieldBegin('createdOn', Thrift.Type.STRUCT, 5);
    this.createdOn.write(output);
    output.writeFieldEnd();
  }
  if (this.lastModifiedOn !== null && this.lastModifiedOn !== undefined) {
    output.writeFieldBegin('lastModifiedOn', Thrift.Type.STRUCT, 6);
    this.lastModifiedOn.write(output);
    output.writeFieldEnd();
  }
  if (this.balance !== null && this.balance !== undefined) {
    output.writeFieldBegin('balance', Thrift.Type.DOUBLE, 7);
    output.writeDouble(this.balance);
    output.writeFieldEnd();
  }
  if (this.previousStatus !== null && this.previousStatus !== undefined) {
    output.writeFieldBegin('previousStatus', Thrift.Type.I32, 8);
    output.writeI32(this.previousStatus);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

CampaignSummary = module.exports.CampaignSummary = function(args) {
  this.accountId = null;
  this.campaignId = null;
  this.incId = null;
  this.campaignName = null;
  this.status = null;
  this.demandSource = null;
  this.previousStatus = null;
  if (args) {
    if (args.accountId !== undefined) {
      this.accountId = args.accountId;
    }
    if (args.campaignId !== undefined) {
      this.campaignId = args.campaignId;
    }
    if (args.incId !== undefined) {
      this.incId = args.incId;
    }
    if (args.campaignName !== undefined) {
      this.campaignName = args.campaignName;
    }
    if (args.status !== undefined) {
      this.status = args.status;
    }
    if (args.demandSource !== undefined) {
      this.demandSource = args.demandSource;
    }
    if (args.previousStatus !== undefined) {
      this.previousStatus = args.previousStatus;
    }
  }
};
CampaignSummary.prototype = {};
CampaignSummary.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.accountId = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.campaignId = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.I32) {
        this.incId = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.STRING) {
        this.campaignName = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 5:
      if (ftype == Thrift.Type.I32) {
        this.status = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 6:
      if (ftype == Thrift.Type.I32) {
        this.demandSource = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 7:
      if (ftype == Thrift.Type.I32) {
        this.previousStatus = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CampaignSummary.prototype.write = function(output) {
  output.writeStructBegin('CampaignSummary');
  if (this.accountId !== null && this.accountId !== undefined) {
    output.writeFieldBegin('accountId', Thrift.Type.STRING, 1);
    output.writeString(this.accountId);
    output.writeFieldEnd();
  }
  if (this.campaignId !== null && this.campaignId !== undefined) {
    output.writeFieldBegin('campaignId', Thrift.Type.STRING, 2);
    output.writeString(this.campaignId);
    output.writeFieldEnd();
  }
  if (this.incId !== null && this.incId !== undefined) {
    output.writeFieldBegin('incId', Thrift.Type.I32, 3);
    output.writeI32(this.incId);
    output.writeFieldEnd();
  }
  if (this.campaignName !== null && this.campaignName !== undefined) {
    output.writeFieldBegin('campaignName', Thrift.Type.STRING, 4);
    output.writeString(this.campaignName);
    output.writeFieldEnd();
  }
  if (this.status !== null && this.status !== undefined) {
    output.writeFieldBegin('status', Thrift.Type.I32, 5);
    output.writeI32(this.status);
    output.writeFieldEnd();
  }
  if (this.demandSource !== null && this.demandSource !== undefined) {
    output.writeFieldBegin('demandSource', Thrift.Type.I32, 6);
    output.writeI32(this.demandSource);
    output.writeFieldEnd();
  }
  if (this.previousStatus !== null && this.previousStatus !== undefined) {
    output.writeFieldBegin('previousStatus', Thrift.Type.I32, 7);
    output.writeI32(this.previousStatus);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BaseSearchParam = module.exports.BaseSearchParam = function(args) {
  this.accountId = null;
  this.rangeStart = 0;
  this.rangeLength = 100;
  this.searchText = null;
  this.matchMode = 4;
  this.statuses = null;
  this.sortBy = 3;
  this.sortOrder = 1;
  if (args) {
    if (args.accountId !== undefined) {
      this.accountId = args.accountId;
    }
    if (args.rangeStart !== undefined) {
      this.rangeStart = args.rangeStart;
    }
    if (args.rangeLength !== undefined) {
      this.rangeLength = args.rangeLength;
    }
    if (args.searchText !== undefined) {
      this.searchText = args.searchText;
    }
    if (args.matchMode !== undefined) {
      this.matchMode = args.matchMode;
    }
    if (args.statuses !== undefined) {
      this.statuses = args.statuses;
    }
    if (args.sortBy !== undefined) {
      this.sortBy = args.sortBy;
    }
    if (args.sortOrder !== undefined) {
      this.sortOrder = args.sortOrder;
    }
  }
};
BaseSearchParam.prototype = {};
BaseSearchParam.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.accountId = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I32) {
        this.rangeStart = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.I32) {
        this.rangeLength = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.STRING) {
        this.searchText = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 5:
      if (ftype == Thrift.Type.I32) {
        this.matchMode = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 6:
      if (ftype == Thrift.Type.LIST) {
        var _size0 = 0;
        var _rtmp34;
        this.statuses = [];
        var _etype3 = 0;
        _rtmp34 = input.readListBegin();
        _etype3 = _rtmp34.etype;
        _size0 = _rtmp34.size;
        for (var _i5 = 0; _i5 < _size0; ++_i5)
        {
          var elem6 = null;
          elem6 = input.readI32();
          this.statuses.push(elem6);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 7:
      if (ftype == Thrift.Type.I32) {
        this.sortBy = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 8:
      if (ftype == Thrift.Type.I32) {
        this.sortOrder = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BaseSearchParam.prototype.write = function(output) {
  output.writeStructBegin('BaseSearchParam');
  if (this.accountId !== null && this.accountId !== undefined) {
    output.writeFieldBegin('accountId', Thrift.Type.STRING, 1);
    output.writeString(this.accountId);
    output.writeFieldEnd();
  }
  if (this.rangeStart !== null && this.rangeStart !== undefined) {
    output.writeFieldBegin('rangeStart', Thrift.Type.I32, 2);
    output.writeI32(this.rangeStart);
    output.writeFieldEnd();
  }
  if (this.rangeLength !== null && this.rangeLength !== undefined) {
    output.writeFieldBegin('rangeLength', Thrift.Type.I32, 3);
    output.writeI32(this.rangeLength);
    output.writeFieldEnd();
  }
  if (this.searchText !== null && this.searchText !== undefined) {
    output.writeFieldBegin('searchText', Thrift.Type.STRING, 4);
    output.writeString(this.searchText);
    output.writeFieldEnd();
  }
  if (this.matchMode !== null && this.matchMode !== undefined) {
    output.writeFieldBegin('matchMode', Thrift.Type.I32, 5);
    output.writeI32(this.matchMode);
    output.writeFieldEnd();
  }
  if (this.statuses !== null && this.statuses !== undefined) {
    output.writeFieldBegin('statuses', Thrift.Type.LIST, 6);
    output.writeListBegin(Thrift.Type.I32, this.statuses.length);
    for (var iter7 in this.statuses)
    {
      if (this.statuses.hasOwnProperty(iter7))
      {
        iter7 = this.statuses[iter7];
        output.writeI32(iter7);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.sortBy !== null && this.sortBy !== undefined) {
    output.writeFieldBegin('sortBy', Thrift.Type.I32, 7);
    output.writeI32(this.sortBy);
    output.writeFieldEnd();
  }
  if (this.sortOrder !== null && this.sortOrder !== undefined) {
    output.writeFieldBegin('sortOrder', Thrift.Type.I32, 8);
    output.writeI32(this.sortOrder);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

CampaignSearchRequest = module.exports.CampaignSearchRequest = function(args) {
  this.baseSearchParam = null;
  if (args) {
    if (args.baseSearchParam !== undefined) {
      this.baseSearchParam = args.baseSearchParam;
    }
  }
};
CampaignSearchRequest.prototype = {};
CampaignSearchRequest.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.baseSearchParam = new ttypes.BaseSearchParam();
        this.baseSearchParam.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CampaignSearchRequest.prototype.write = function(output) {
  output.writeStructBegin('CampaignSearchRequest');
  if (this.baseSearchParam !== null && this.baseSearchParam !== undefined) {
    output.writeFieldBegin('baseSearchParam', Thrift.Type.STRUCT, 1);
    this.baseSearchParam.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

GeoTargeting = module.exports.GeoTargeting = function(args) {
  this.targetingType = null;
  this.presetId = null;
  this.targetingDetails = null;
  if (args) {
    if (args.targetingType !== undefined) {
      this.targetingType = args.targetingType;
    }
    if (args.presetId !== undefined) {
      this.presetId = args.presetId;
    }
    if (args.targetingDetails !== undefined) {
      this.targetingDetails = args.targetingDetails;
    }
  }
};
GeoTargeting.prototype = {};
GeoTargeting.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.targetingType = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I32) {
        this.presetId = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.LIST) {
        var _size8 = 0;
        var _rtmp312;
        this.targetingDetails = [];
        var _etype11 = 0;
        _rtmp312 = input.readListBegin();
        _etype11 = _rtmp312.etype;
        _size8 = _rtmp312.size;
        for (var _i13 = 0; _i13 < _size8; ++_i13)
        {
          var elem14 = null;
          elem14 = new DemandModel_ttypes.GeoTargetingDetail();
          elem14.read(input);
          this.targetingDetails.push(elem14);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

GeoTargeting.prototype.write = function(output) {
  output.writeStructBegin('GeoTargeting');
  if (this.targetingType !== null && this.targetingType !== undefined) {
    output.writeFieldBegin('targetingType', Thrift.Type.I32, 1);
    output.writeI32(this.targetingType);
    output.writeFieldEnd();
  }
  if (this.presetId !== null && this.presetId !== undefined) {
    output.writeFieldBegin('presetId', Thrift.Type.I32, 2);
    output.writeI32(this.presetId);
    output.writeFieldEnd();
  }
  if (this.targetingDetails !== null && this.targetingDetails !== undefined) {
    output.writeFieldBegin('targetingDetails', Thrift.Type.LIST, 3);
    output.writeListBegin(Thrift.Type.STRUCT, this.targetingDetails.length);
    for (var iter15 in this.targetingDetails)
    {
      if (this.targetingDetails.hasOwnProperty(iter15))
      {
        iter15 = this.targetingDetails[iter15];
        iter15.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

CarrierTargeting = module.exports.CarrierTargeting = function(args) {
  this.carrierTargetings = null;
  if (args) {
    if (args.carrierTargetings !== undefined) {
      this.carrierTargetings = args.carrierTargetings;
    }
  }
};
CarrierTargeting.prototype = {};
CarrierTargeting.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.LIST) {
        var _size16 = 0;
        var _rtmp320;
        this.carrierTargetings = [];
        var _etype19 = 0;
        _rtmp320 = input.readListBegin();
        _etype19 = _rtmp320.etype;
        _size16 = _rtmp320.size;
        for (var _i21 = 0; _i21 < _size16; ++_i21)
        {
          var elem22 = null;
          elem22 = new DemandModel_ttypes.CarrierTargetingDetail();
          elem22.read(input);
          this.carrierTargetings.push(elem22);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CarrierTargeting.prototype.write = function(output) {
  output.writeStructBegin('CarrierTargeting');
  if (this.carrierTargetings !== null && this.carrierTargetings !== undefined) {
    output.writeFieldBegin('carrierTargetings', Thrift.Type.LIST, 1);
    output.writeListBegin(Thrift.Type.STRUCT, this.carrierTargetings.length);
    for (var iter23 in this.carrierTargetings)
    {
      if (this.carrierTargetings.hasOwnProperty(iter23))
      {
        iter23 = this.carrierTargetings[iter23];
        iter23.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

GeoCarrierPresetDetail = module.exports.GeoCarrierPresetDetail = function(args) {
  this.geoTargetingDetails = null;
  this.carrierTargetings = null;
  if (args) {
    if (args.geoTargetingDetails !== undefined) {
      this.geoTargetingDetails = args.geoTargetingDetails;
    }
    if (args.carrierTargetings !== undefined) {
      this.carrierTargetings = args.carrierTargetings;
    }
  }
};
GeoCarrierPresetDetail.prototype = {};
GeoCarrierPresetDetail.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.LIST) {
        var _size24 = 0;
        var _rtmp328;
        this.geoTargetingDetails = [];
        var _etype27 = 0;
        _rtmp328 = input.readListBegin();
        _etype27 = _rtmp328.etype;
        _size24 = _rtmp328.size;
        for (var _i29 = 0; _i29 < _size24; ++_i29)
        {
          var elem30 = null;
          elem30 = new DemandModel_ttypes.GeoTargetingDetail();
          elem30.read(input);
          this.geoTargetingDetails.push(elem30);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.LIST) {
        var _size31 = 0;
        var _rtmp335;
        this.carrierTargetings = [];
        var _etype34 = 0;
        _rtmp335 = input.readListBegin();
        _etype34 = _rtmp335.etype;
        _size31 = _rtmp335.size;
        for (var _i36 = 0; _i36 < _size31; ++_i36)
        {
          var elem37 = null;
          elem37 = new DemandModel_ttypes.CarrierTargetingDetail();
          elem37.read(input);
          this.carrierTargetings.push(elem37);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

GeoCarrierPresetDetail.prototype.write = function(output) {
  output.writeStructBegin('GeoCarrierPresetDetail');
  if (this.geoTargetingDetails !== null && this.geoTargetingDetails !== undefined) {
    output.writeFieldBegin('geoTargetingDetails', Thrift.Type.LIST, 1);
    output.writeListBegin(Thrift.Type.STRUCT, this.geoTargetingDetails.length);
    for (var iter38 in this.geoTargetingDetails)
    {
      if (this.geoTargetingDetails.hasOwnProperty(iter38))
      {
        iter38 = this.geoTargetingDetails[iter38];
        iter38.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.carrierTargetings !== null && this.carrierTargetings !== undefined) {
    output.writeFieldBegin('carrierTargetings', Thrift.Type.LIST, 2);
    output.writeListBegin(Thrift.Type.STRUCT, this.carrierTargetings.length);
    for (var iter39 in this.carrierTargetings)
    {
      if (this.carrierTargetings.hasOwnProperty(iter39))
      {
        iter39 = this.carrierTargetings[iter39];
        iter39.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

DeviceTargeting = module.exports.DeviceTargeting = function(args) {
  this.targetingType = null;
  this.presetId = null;
  this.deviceDetail = null;
  if (args) {
    if (args.targetingType !== undefined) {
      this.targetingType = args.targetingType;
    }
    if (args.presetId !== undefined) {
      this.presetId = args.presetId;
    }
    if (args.deviceDetail !== undefined) {
      this.deviceDetail = args.deviceDetail;
    }
  }
};
DeviceTargeting.prototype = {};
DeviceTargeting.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.targetingType = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I32) {
        this.presetId = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.deviceDetail = new DemandModel_ttypes.DeviceDetail();
        this.deviceDetail.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

DeviceTargeting.prototype.write = function(output) {
  output.writeStructBegin('DeviceTargeting');
  if (this.targetingType !== null && this.targetingType !== undefined) {
    output.writeFieldBegin('targetingType', Thrift.Type.I32, 1);
    output.writeI32(this.targetingType);
    output.writeFieldEnd();
  }
  if (this.presetId !== null && this.presetId !== undefined) {
    output.writeFieldBegin('presetId', Thrift.Type.I32, 2);
    output.writeI32(this.presetId);
    output.writeFieldEnd();
  }
  if (this.deviceDetail !== null && this.deviceDetail !== undefined) {
    output.writeFieldBegin('deviceDetail', Thrift.Type.STRUCT, 3);
    this.deviceDetail.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BrowserTargeting = module.exports.BrowserTargeting = function(args) {
  this.browsers = null;
  if (args) {
    if (args.browsers !== undefined) {
      this.browsers = args.browsers;
    }
  }
};
BrowserTargeting.prototype = {};
BrowserTargeting.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.LIST) {
        var _size40 = 0;
        var _rtmp344;
        this.browsers = [];
        var _etype43 = 0;
        _rtmp344 = input.readListBegin();
        _etype43 = _rtmp344.etype;
        _size40 = _rtmp344.size;
        for (var _i45 = 0; _i45 < _size40; ++_i45)
        {
          var elem46 = null;
          elem46 = new DemandModel_ttypes.Browser();
          elem46.read(input);
          this.browsers.push(elem46);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BrowserTargeting.prototype.write = function(output) {
  output.writeStructBegin('BrowserTargeting');
  if (this.browsers !== null && this.browsers !== undefined) {
    output.writeFieldBegin('browsers', Thrift.Type.LIST, 1);
    output.writeListBegin(Thrift.Type.STRUCT, this.browsers.length);
    for (var iter47 in this.browsers)
    {
      if (this.browsers.hasOwnProperty(iter47))
      {
        iter47 = this.browsers[iter47];
        iter47.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

DemogTargeting = module.exports.DemogTargeting = function(args) {
  this.gender = null;
  this.ageRanges = null;
  if (args) {
    if (args.gender !== undefined) {
      this.gender = args.gender;
    }
    if (args.ageRanges !== undefined) {
      this.ageRanges = args.ageRanges;
    }
  }
};
DemogTargeting.prototype = {};
DemogTargeting.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.gender = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.LIST) {
        var _size48 = 0;
        var _rtmp352;
        this.ageRanges = [];
        var _etype51 = 0;
        _rtmp352 = input.readListBegin();
        _etype51 = _rtmp352.etype;
        _size48 = _rtmp352.size;
        for (var _i53 = 0; _i53 < _size48; ++_i53)
        {
          var elem54 = null;
          elem54 = new DemandModel_ttypes.AgeRange();
          elem54.read(input);
          this.ageRanges.push(elem54);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

DemogTargeting.prototype.write = function(output) {
  output.writeStructBegin('DemogTargeting');
  if (this.gender !== null && this.gender !== undefined) {
    output.writeFieldBegin('gender', Thrift.Type.I32, 1);
    output.writeI32(this.gender);
    output.writeFieldEnd();
  }
  if (this.ageRanges !== null && this.ageRanges !== undefined) {
    output.writeFieldBegin('ageRanges', Thrift.Type.LIST, 2);
    output.writeListBegin(Thrift.Type.STRUCT, this.ageRanges.length);
    for (var iter55 in this.ageRanges)
    {
      if (this.ageRanges.hasOwnProperty(iter55))
      {
        iter55 = this.ageRanges[iter55];
        iter55.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ScheduleTargeting = module.exports.ScheduleTargeting = function(args) {
  this.schedules = null;
  if (args) {
    if (args.schedules !== undefined) {
      this.schedules = args.schedules;
    }
  }
};
ScheduleTargeting.prototype = {};
ScheduleTargeting.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.LIST) {
        var _size56 = 0;
        var _rtmp360;
        this.schedules = [];
        var _etype59 = 0;
        _rtmp360 = input.readListBegin();
        _etype59 = _rtmp360.etype;
        _size56 = _rtmp360.size;
        for (var _i61 = 0; _i61 < _size56; ++_i61)
        {
          var elem62 = null;
          elem62 = new DemandModel_ttypes.Schedule();
          elem62.read(input);
          this.schedules.push(elem62);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ScheduleTargeting.prototype.write = function(output) {
  output.writeStructBegin('ScheduleTargeting');
  if (this.schedules !== null && this.schedules !== undefined) {
    output.writeFieldBegin('schedules', Thrift.Type.LIST, 1);
    output.writeListBegin(Thrift.Type.STRUCT, this.schedules.length);
    for (var iter63 in this.schedules)
    {
      if (this.schedules.hasOwnProperty(iter63))
      {
        iter63 = this.schedules[iter63];
        iter63.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

AdGroupTargetingDetail = module.exports.AdGroupTargetingDetail = function(args) {
  this.geoTargeting = null;
  this.carrierTargeting = null;
  this.deviceTargeting = null;
  this.demogTargeting = null;
  this.scheduleTargetings = null;
  this.browserTargeting = null;
  this.domainTraffic = null;
  if (args) {
    if (args.geoTargeting !== undefined) {
      this.geoTargeting = args.geoTargeting;
    }
    if (args.carrierTargeting !== undefined) {
      this.carrierTargeting = args.carrierTargeting;
    }
    if (args.deviceTargeting !== undefined) {
      this.deviceTargeting = args.deviceTargeting;
    }
    if (args.demogTargeting !== undefined) {
      this.demogTargeting = args.demogTargeting;
    }
    if (args.scheduleTargetings !== undefined) {
      this.scheduleTargetings = args.scheduleTargetings;
    }
    if (args.browserTargeting !== undefined) {
      this.browserTargeting = args.browserTargeting;
    }
    if (args.domainTraffic !== undefined) {
      this.domainTraffic = args.domainTraffic;
    }
  }
};
AdGroupTargetingDetail.prototype = {};
AdGroupTargetingDetail.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.geoTargeting = new ttypes.GeoTargeting();
        this.geoTargeting.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.carrierTargeting = new ttypes.CarrierTargeting();
        this.carrierTargeting.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.deviceTargeting = new ttypes.DeviceTargeting();
        this.deviceTargeting.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.STRUCT) {
        this.demogTargeting = new ttypes.DemogTargeting();
        this.demogTargeting.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 5:
      if (ftype == Thrift.Type.STRUCT) {
        this.scheduleTargetings = new ttypes.ScheduleTargeting();
        this.scheduleTargetings.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 6:
      if (ftype == Thrift.Type.STRUCT) {
        this.browserTargeting = new ttypes.BrowserTargeting();
        this.browserTargeting.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 7:
      if (ftype == Thrift.Type.LIST) {
        var _size64 = 0;
        var _rtmp368;
        this.domainTraffic = [];
        var _etype67 = 0;
        _rtmp368 = input.readListBegin();
        _etype67 = _rtmp368.etype;
        _size64 = _rtmp368.size;
        for (var _i69 = 0; _i69 < _size64; ++_i69)
        {
          var elem70 = null;
          elem70 = input.readI32();
          this.domainTraffic.push(elem70);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AdGroupTargetingDetail.prototype.write = function(output) {
  output.writeStructBegin('AdGroupTargetingDetail');
  if (this.geoTargeting !== null && this.geoTargeting !== undefined) {
    output.writeFieldBegin('geoTargeting', Thrift.Type.STRUCT, 1);
    this.geoTargeting.write(output);
    output.writeFieldEnd();
  }
  if (this.carrierTargeting !== null && this.carrierTargeting !== undefined) {
    output.writeFieldBegin('carrierTargeting', Thrift.Type.STRUCT, 2);
    this.carrierTargeting.write(output);
    output.writeFieldEnd();
  }
  if (this.deviceTargeting !== null && this.deviceTargeting !== undefined) {
    output.writeFieldBegin('deviceTargeting', Thrift.Type.STRUCT, 3);
    this.deviceTargeting.write(output);
    output.writeFieldEnd();
  }
  if (this.demogTargeting !== null && this.demogTargeting !== undefined) {
    output.writeFieldBegin('demogTargeting', Thrift.Type.STRUCT, 4);
    this.demogTargeting.write(output);
    output.writeFieldEnd();
  }
  if (this.scheduleTargetings !== null && this.scheduleTargetings !== undefined) {
    output.writeFieldBegin('scheduleTargetings', Thrift.Type.STRUCT, 5);
    this.scheduleTargetings.write(output);
    output.writeFieldEnd();
  }
  if (this.browserTargeting !== null && this.browserTargeting !== undefined) {
    output.writeFieldBegin('browserTargeting', Thrift.Type.STRUCT, 6);
    this.browserTargeting.write(output);
    output.writeFieldEnd();
  }
  if (this.domainTraffic !== null && this.domainTraffic !== undefined) {
    output.writeFieldBegin('domainTraffic', Thrift.Type.LIST, 7);
    output.writeListBegin(Thrift.Type.I32, this.domainTraffic.length);
    for (var iter71 in this.domainTraffic)
    {
      if (this.domainTraffic.hasOwnProperty(iter71))
      {
        iter71 = this.domainTraffic[iter71];
        output.writeI32(iter71);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

AdGroupTargeting = module.exports.AdGroupTargeting = function(args) {
  this.targetingType = null;
  this.presetId = null;
  this.adGroupTargetingDetail = null;
  if (args) {
    if (args.targetingType !== undefined) {
      this.targetingType = args.targetingType;
    }
    if (args.presetId !== undefined) {
      this.presetId = args.presetId;
    }
    if (args.adGroupTargetingDetail !== undefined) {
      this.adGroupTargetingDetail = args.adGroupTargetingDetail;
    }
  }
};
AdGroupTargeting.prototype = {};
AdGroupTargeting.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.targetingType = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I32) {
        this.presetId = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.adGroupTargetingDetail = new ttypes.AdGroupTargetingDetail();
        this.adGroupTargetingDetail.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AdGroupTargeting.prototype.write = function(output) {
  output.writeStructBegin('AdGroupTargeting');
  if (this.targetingType !== null && this.targetingType !== undefined) {
    output.writeFieldBegin('targetingType', Thrift.Type.I32, 1);
    output.writeI32(this.targetingType);
    output.writeFieldEnd();
  }
  if (this.presetId !== null && this.presetId !== undefined) {
    output.writeFieldBegin('presetId', Thrift.Type.I32, 2);
    output.writeI32(this.presetId);
    output.writeFieldEnd();
  }
  if (this.adGroupTargetingDetail !== null && this.adGroupTargetingDetail !== undefined) {
    output.writeFieldBegin('adGroupTargetingDetail', Thrift.Type.STRUCT, 3);
    this.adGroupTargetingDetail.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

AdGroup = module.exports.AdGroup = function(args) {
  this.campaignId = null;
  this.adGroupBasic = null;
  this.adGroupTargeting = null;
  this.adGroupPricing = null;
  this.adGroupConstraint = null;
  this.adGroupMeta = null;
  if (args) {
    if (args.campaignId !== undefined) {
      this.campaignId = args.campaignId;
    }
    if (args.adGroupBasic !== undefined) {
      this.adGroupBasic = args.adGroupBasic;
    }
    if (args.adGroupTargeting !== undefined) {
      this.adGroupTargeting = args.adGroupTargeting;
    }
    if (args.adGroupPricing !== undefined) {
      this.adGroupPricing = args.adGroupPricing;
    }
    if (args.adGroupConstraint !== undefined) {
      this.adGroupConstraint = args.adGroupConstraint;
    }
    if (args.adGroupMeta !== undefined) {
      this.adGroupMeta = args.adGroupMeta;
    }
  }
};
AdGroup.prototype = {};
AdGroup.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.campaignId = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.adGroupBasic = new DemandModel_ttypes.AdGroupBasic();
        this.adGroupBasic.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.adGroupTargeting = new ttypes.AdGroupTargeting();
        this.adGroupTargeting.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.STRUCT) {
        this.adGroupPricing = new DemandModel_ttypes.AdGroupPricing();
        this.adGroupPricing.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 5:
      if (ftype == Thrift.Type.STRUCT) {
        this.adGroupConstraint = new DemandModel_ttypes.AdGroupConstraint();
        this.adGroupConstraint.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 6:
      if (ftype == Thrift.Type.STRUCT) {
        this.adGroupMeta = new DemandModel_ttypes.AdGroupMeta();
        this.adGroupMeta.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AdGroup.prototype.write = function(output) {
  output.writeStructBegin('AdGroup');
  if (this.campaignId !== null && this.campaignId !== undefined) {
    output.writeFieldBegin('campaignId', Thrift.Type.STRING, 1);
    output.writeString(this.campaignId);
    output.writeFieldEnd();
  }
  if (this.adGroupBasic !== null && this.adGroupBasic !== undefined) {
    output.writeFieldBegin('adGroupBasic', Thrift.Type.STRUCT, 2);
    this.adGroupBasic.write(output);
    output.writeFieldEnd();
  }
  if (this.adGroupTargeting !== null && this.adGroupTargeting !== undefined) {
    output.writeFieldBegin('adGroupTargeting', Thrift.Type.STRUCT, 3);
    this.adGroupTargeting.write(output);
    output.writeFieldEnd();
  }
  if (this.adGroupPricing !== null && this.adGroupPricing !== undefined) {
    output.writeFieldBegin('adGroupPricing', Thrift.Type.STRUCT, 4);
    this.adGroupPricing.write(output);
    output.writeFieldEnd();
  }
  if (this.adGroupConstraint !== null && this.adGroupConstraint !== undefined) {
    output.writeFieldBegin('adGroupConstraint', Thrift.Type.STRUCT, 5);
    this.adGroupConstraint.write(output);
    output.writeFieldEnd();
  }
  if (this.adGroupMeta !== null && this.adGroupMeta !== undefined) {
    output.writeFieldBegin('adGroupMeta', Thrift.Type.STRUCT, 6);
    this.adGroupMeta.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

AdGroupSummary = module.exports.AdGroupSummary = function(args) {
  this.accountId = null;
  this.campaignId = null;
  this.adGroupId = null;
  this.adGroupName = null;
  this.status = null;
  this.previousStatus = null;
  if (args) {
    if (args.accountId !== undefined) {
      this.accountId = args.accountId;
    }
    if (args.campaignId !== undefined) {
      this.campaignId = args.campaignId;
    }
    if (args.adGroupId !== undefined) {
      this.adGroupId = args.adGroupId;
    }
    if (args.adGroupName !== undefined) {
      this.adGroupName = args.adGroupName;
    }
    if (args.status !== undefined) {
      this.status = args.status;
    }
    if (args.previousStatus !== undefined) {
      this.previousStatus = args.previousStatus;
    }
  }
};
AdGroupSummary.prototype = {};
AdGroupSummary.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.accountId = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.campaignId = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.adGroupId = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.STRING) {
        this.adGroupName = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 5:
      if (ftype == Thrift.Type.I32) {
        this.status = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 6:
      if (ftype == Thrift.Type.I32) {
        this.previousStatus = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AdGroupSummary.prototype.write = function(output) {
  output.writeStructBegin('AdGroupSummary');
  if (this.accountId !== null && this.accountId !== undefined) {
    output.writeFieldBegin('accountId', Thrift.Type.STRING, 1);
    output.writeString(this.accountId);
    output.writeFieldEnd();
  }
  if (this.campaignId !== null && this.campaignId !== undefined) {
    output.writeFieldBegin('campaignId', Thrift.Type.STRING, 2);
    output.writeString(this.campaignId);
    output.writeFieldEnd();
  }
  if (this.adGroupId !== null && this.adGroupId !== undefined) {
    output.writeFieldBegin('adGroupId', Thrift.Type.STRING, 3);
    output.writeString(this.adGroupId);
    output.writeFieldEnd();
  }
  if (this.adGroupName !== null && this.adGroupName !== undefined) {
    output.writeFieldBegin('adGroupName', Thrift.Type.STRING, 4);
    output.writeString(this.adGroupName);
    output.writeFieldEnd();
  }
  if (this.status !== null && this.status !== undefined) {
    output.writeFieldBegin('status', Thrift.Type.I32, 5);
    output.writeI32(this.status);
    output.writeFieldEnd();
  }
  if (this.previousStatus !== null && this.previousStatus !== undefined) {
    output.writeFieldBegin('previousStatus', Thrift.Type.I32, 6);
    output.writeI32(this.previousStatus);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

AdGroupDetail = module.exports.AdGroupDetail = function(args) {
  this.adGroup = null;
  this.adGroupId = null;
  this.accountId = null;
  this.campaignId = null;
  this.status = null;
  this.createdOn = null;
  this.brandImageURL = null;
  this.previousStatus = null;
  if (args) {
    if (args.adGroup !== undefined) {
      this.adGroup = args.adGroup;
    }
    if (args.adGroupId !== undefined) {
      this.adGroupId = args.adGroupId;
    }
    if (args.accountId !== undefined) {
      this.accountId = args.accountId;
    }
    if (args.campaignId !== undefined) {
      this.campaignId = args.campaignId;
    }
    if (args.status !== undefined) {
      this.status = args.status;
    }
    if (args.createdOn !== undefined) {
      this.createdOn = args.createdOn;
    }
    if (args.brandImageURL !== undefined) {
      this.brandImageURL = args.brandImageURL;
    }
    if (args.previousStatus !== undefined) {
      this.previousStatus = args.previousStatus;
    }
  }
};
AdGroupDetail.prototype = {};
AdGroupDetail.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.adGroup = new ttypes.AdGroup();
        this.adGroup.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.adGroupId = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.accountId = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.STRING) {
        this.campaignId = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 5:
      if (ftype == Thrift.Type.I32) {
        this.status = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 6:
      if (ftype == Thrift.Type.STRUCT) {
        this.createdOn = new DemandModel_ttypes.DateTime();
        this.createdOn.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 7:
      if (ftype == Thrift.Type.STRING) {
        this.brandImageURL = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 8:
      if (ftype == Thrift.Type.I32) {
        this.previousStatus = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AdGroupDetail.prototype.write = function(output) {
  output.writeStructBegin('AdGroupDetail');
  if (this.adGroup !== null && this.adGroup !== undefined) {
    output.writeFieldBegin('adGroup', Thrift.Type.STRUCT, 1);
    this.adGroup.write(output);
    output.writeFieldEnd();
  }
  if (this.adGroupId !== null && this.adGroupId !== undefined) {
    output.writeFieldBegin('adGroupId', Thrift.Type.STRING, 2);
    output.writeString(this.adGroupId);
    output.writeFieldEnd();
  }
  if (this.accountId !== null && this.accountId !== undefined) {
    output.writeFieldBegin('accountId', Thrift.Type.STRING, 3);
    output.writeString(this.accountId);
    output.writeFieldEnd();
  }
  if (this.campaignId !== null && this.campaignId !== undefined) {
    output.writeFieldBegin('campaignId', Thrift.Type.STRING, 4);
    output.writeString(this.campaignId);
    output.writeFieldEnd();
  }
  if (this.status !== null && this.status !== undefined) {
    output.writeFieldBegin('status', Thrift.Type.I32, 5);
    output.writeI32(this.status);
    output.writeFieldEnd();
  }
  if (this.createdOn !== null && this.createdOn !== undefined) {
    output.writeFieldBegin('createdOn', Thrift.Type.STRUCT, 6);
    this.createdOn.write(output);
    output.writeFieldEnd();
  }
  if (this.brandImageURL !== null && this.brandImageURL !== undefined) {
    output.writeFieldBegin('brandImageURL', Thrift.Type.STRING, 7);
    output.writeString(this.brandImageURL);
    output.writeFieldEnd();
  }
  if (this.previousStatus !== null && this.previousStatus !== undefined) {
    output.writeFieldBegin('previousStatus', Thrift.Type.I32, 8);
    output.writeI32(this.previousStatus);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

AdGroupSearchRequest = module.exports.AdGroupSearchRequest = function(args) {
  this.baseSearchParam = null;
  this.campaignIds = null;
  this.statusInherited = null;
  if (args) {
    if (args.baseSearchParam !== undefined) {
      this.baseSearchParam = args.baseSearchParam;
    }
    if (args.campaignIds !== undefined) {
      this.campaignIds = args.campaignIds;
    }
    if (args.statusInherited !== undefined) {
      this.statusInherited = args.statusInherited;
    }
  }
};
AdGroupSearchRequest.prototype = {};
AdGroupSearchRequest.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.baseSearchParam = new ttypes.BaseSearchParam();
        this.baseSearchParam.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.LIST) {
        var _size72 = 0;
        var _rtmp376;
        this.campaignIds = [];
        var _etype75 = 0;
        _rtmp376 = input.readListBegin();
        _etype75 = _rtmp376.etype;
        _size72 = _rtmp376.size;
        for (var _i77 = 0; _i77 < _size72; ++_i77)
        {
          var elem78 = null;
          elem78 = input.readString();
          this.campaignIds.push(elem78);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.BOOL) {
        this.statusInherited = input.readBool();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AdGroupSearchRequest.prototype.write = function(output) {
  output.writeStructBegin('AdGroupSearchRequest');
  if (this.baseSearchParam !== null && this.baseSearchParam !== undefined) {
    output.writeFieldBegin('baseSearchParam', Thrift.Type.STRUCT, 1);
    this.baseSearchParam.write(output);
    output.writeFieldEnd();
  }
  if (this.campaignIds !== null && this.campaignIds !== undefined) {
    output.writeFieldBegin('campaignIds', Thrift.Type.LIST, 2);
    output.writeListBegin(Thrift.Type.STRING, this.campaignIds.length);
    for (var iter79 in this.campaignIds)
    {
      if (this.campaignIds.hasOwnProperty(iter79))
      {
        iter79 = this.campaignIds[iter79];
        output.writeString(iter79);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.statusInherited !== null && this.statusInherited !== undefined) {
    output.writeFieldBegin('statusInherited', Thrift.Type.BOOL, 3);
    output.writeBool(this.statusInherited);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

CopyAdGroupDetail = module.exports.CopyAdGroupDetail = function(args) {
  this.accountId = null;
  this.destinationCampaignId = null;
  this.sourceAdGroupId = null;
  this.newAdGroupName = null;
  this.enableRichMedia = null;
  this.adIds = null;
  this.clickToAction = null;
  this.ctaProposition = null;
  if (args) {
    if (args.accountId !== undefined) {
      this.accountId = args.accountId;
    }
    if (args.destinationCampaignId !== undefined) {
      this.destinationCampaignId = args.destinationCampaignId;
    }
    if (args.sourceAdGroupId !== undefined) {
      this.sourceAdGroupId = args.sourceAdGroupId;
    }
    if (args.newAdGroupName !== undefined) {
      this.newAdGroupName = args.newAdGroupName;
    }
    if (args.enableRichMedia !== undefined) {
      this.enableRichMedia = args.enableRichMedia;
    }
    if (args.adIds !== undefined) {
      this.adIds = args.adIds;
    }
    if (args.clickToAction !== undefined) {
      this.clickToAction = args.clickToAction;
    }
    if (args.ctaProposition !== undefined) {
      this.ctaProposition = args.ctaProposition;
    }
  }
};
CopyAdGroupDetail.prototype = {};
CopyAdGroupDetail.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.accountId = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.destinationCampaignId = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.sourceAdGroupId = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.STRING) {
        this.newAdGroupName = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 5:
      if (ftype == Thrift.Type.BOOL) {
        this.enableRichMedia = input.readBool();
      } else {
        input.skip(ftype);
      }
      break;
      case 6:
      if (ftype == Thrift.Type.LIST) {
        var _size80 = 0;
        var _rtmp384;
        this.adIds = [];
        var _etype83 = 0;
        _rtmp384 = input.readListBegin();
        _etype83 = _rtmp384.etype;
        _size80 = _rtmp384.size;
        for (var _i85 = 0; _i85 < _size80; ++_i85)
        {
          var elem86 = null;
          elem86 = input.readString();
          this.adIds.push(elem86);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 7:
      if (ftype == Thrift.Type.I32) {
        this.clickToAction = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 8:
      if (ftype == Thrift.Type.STRING) {
        this.ctaProposition = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CopyAdGroupDetail.prototype.write = function(output) {
  output.writeStructBegin('CopyAdGroupDetail');
  if (this.accountId !== null && this.accountId !== undefined) {
    output.writeFieldBegin('accountId', Thrift.Type.STRING, 1);
    output.writeString(this.accountId);
    output.writeFieldEnd();
  }
  if (this.destinationCampaignId !== null && this.destinationCampaignId !== undefined) {
    output.writeFieldBegin('destinationCampaignId', Thrift.Type.STRING, 2);
    output.writeString(this.destinationCampaignId);
    output.writeFieldEnd();
  }
  if (this.sourceAdGroupId !== null && this.sourceAdGroupId !== undefined) {
    output.writeFieldBegin('sourceAdGroupId', Thrift.Type.STRING, 3);
    output.writeString(this.sourceAdGroupId);
    output.writeFieldEnd();
  }
  if (this.newAdGroupName !== null && this.newAdGroupName !== undefined) {
    output.writeFieldBegin('newAdGroupName', Thrift.Type.STRING, 4);
    output.writeString(this.newAdGroupName);
    output.writeFieldEnd();
  }
  if (this.enableRichMedia !== null && this.enableRichMedia !== undefined) {
    output.writeFieldBegin('enableRichMedia', Thrift.Type.BOOL, 5);
    output.writeBool(this.enableRichMedia);
    output.writeFieldEnd();
  }
  if (this.adIds !== null && this.adIds !== undefined) {
    output.writeFieldBegin('adIds', Thrift.Type.LIST, 6);
    output.writeListBegin(Thrift.Type.STRING, this.adIds.length);
    for (var iter87 in this.adIds)
    {
      if (this.adIds.hasOwnProperty(iter87))
      {
        iter87 = this.adIds[iter87];
        output.writeString(iter87);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.clickToAction !== null && this.clickToAction !== undefined) {
    output.writeFieldBegin('clickToAction', Thrift.Type.I32, 7);
    output.writeI32(this.clickToAction);
    output.writeFieldEnd();
  }
  if (this.ctaProposition !== null && this.ctaProposition !== undefined) {
    output.writeFieldBegin('ctaProposition', Thrift.Type.STRING, 8);
    output.writeString(this.ctaProposition);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

SlotDetail = module.exports.SlotDetail = function(args) {
  this.id = null;
  this.height = null;
  this.width = null;
  this.rmCapable = null;
  if (args) {
    if (args.id !== undefined) {
      this.id = args.id;
    }
    if (args.height !== undefined) {
      this.height = args.height;
    }
    if (args.width !== undefined) {
      this.width = args.width;
    }
    if (args.rmCapable !== undefined) {
      this.rmCapable = args.rmCapable;
    }
  }
};
SlotDetail.prototype = {};
SlotDetail.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.id = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I32) {
        this.height = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.I32) {
        this.width = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.BOOL) {
        this.rmCapable = input.readBool();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

SlotDetail.prototype.write = function(output) {
  output.writeStructBegin('SlotDetail');
  if (this.id !== null && this.id !== undefined) {
    output.writeFieldBegin('id', Thrift.Type.I32, 1);
    output.writeI32(this.id);
    output.writeFieldEnd();
  }
  if (this.height !== null && this.height !== undefined) {
    output.writeFieldBegin('height', Thrift.Type.I32, 2);
    output.writeI32(this.height);
    output.writeFieldEnd();
  }
  if (this.width !== null && this.width !== undefined) {
    output.writeFieldBegin('width', Thrift.Type.I32, 3);
    output.writeI32(this.width);
    output.writeFieldEnd();
  }
  if (this.rmCapable !== null && this.rmCapable !== undefined) {
    output.writeFieldBegin('rmCapable', Thrift.Type.BOOL, 4);
    output.writeBool(this.rmCapable);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

AdSummary = module.exports.AdSummary = function(args) {
  this.accountId = null;
  this.campaignId = null;
  this.adGroupId = null;
  this.adId = null;
  this.adName = null;
  this.contentId = null;
  this.adFormat = null;
  this.status = null;
  this.previousStatus = null;
  if (args) {
    if (args.accountId !== undefined) {
      this.accountId = args.accountId;
    }
    if (args.campaignId !== undefined) {
      this.campaignId = args.campaignId;
    }
    if (args.adGroupId !== undefined) {
      this.adGroupId = args.adGroupId;
    }
    if (args.adId !== undefined) {
      this.adId = args.adId;
    }
    if (args.adName !== undefined) {
      this.adName = args.adName;
    }
    if (args.contentId !== undefined) {
      this.contentId = args.contentId;
    }
    if (args.adFormat !== undefined) {
      this.adFormat = args.adFormat;
    }
    if (args.status !== undefined) {
      this.status = args.status;
    }
    if (args.previousStatus !== undefined) {
      this.previousStatus = args.previousStatus;
    }
  }
};
AdSummary.prototype = {};
AdSummary.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.accountId = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.campaignId = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.adGroupId = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.STRING) {
        this.adId = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 5:
      if (ftype == Thrift.Type.STRING) {
        this.adName = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 6:
      if (ftype == Thrift.Type.I32) {
        this.contentId = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 7:
      if (ftype == Thrift.Type.I32) {
        this.adFormat = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 8:
      if (ftype == Thrift.Type.I32) {
        this.status = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 9:
      if (ftype == Thrift.Type.I32) {
        this.previousStatus = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AdSummary.prototype.write = function(output) {
  output.writeStructBegin('AdSummary');
  if (this.accountId !== null && this.accountId !== undefined) {
    output.writeFieldBegin('accountId', Thrift.Type.STRING, 1);
    output.writeString(this.accountId);
    output.writeFieldEnd();
  }
  if (this.campaignId !== null && this.campaignId !== undefined) {
    output.writeFieldBegin('campaignId', Thrift.Type.STRING, 2);
    output.writeString(this.campaignId);
    output.writeFieldEnd();
  }
  if (this.adGroupId !== null && this.adGroupId !== undefined) {
    output.writeFieldBegin('adGroupId', Thrift.Type.STRING, 3);
    output.writeString(this.adGroupId);
    output.writeFieldEnd();
  }
  if (this.adId !== null && this.adId !== undefined) {
    output.writeFieldBegin('adId', Thrift.Type.STRING, 4);
    output.writeString(this.adId);
    output.writeFieldEnd();
  }
  if (this.adName !== null && this.adName !== undefined) {
    output.writeFieldBegin('adName', Thrift.Type.STRING, 5);
    output.writeString(this.adName);
    output.writeFieldEnd();
  }
  if (this.contentId !== null && this.contentId !== undefined) {
    output.writeFieldBegin('contentId', Thrift.Type.I32, 6);
    output.writeI32(this.contentId);
    output.writeFieldEnd();
  }
  if (this.adFormat !== null && this.adFormat !== undefined) {
    output.writeFieldBegin('adFormat', Thrift.Type.I32, 7);
    output.writeI32(this.adFormat);
    output.writeFieldEnd();
  }
  if (this.status !== null && this.status !== undefined) {
    output.writeFieldBegin('status', Thrift.Type.I32, 8);
    output.writeI32(this.status);
    output.writeFieldEnd();
  }
  if (this.previousStatus !== null && this.previousStatus !== undefined) {
    output.writeFieldBegin('previousStatus', Thrift.Type.I32, 9);
    output.writeI32(this.previousStatus);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

AdSearchRequest = module.exports.AdSearchRequest = function(args) {
  this.baseSearchParam = null;
  this.campaignIds = null;
  this.adGroupIds = null;
  this.statusInherited = null;
  if (args) {
    if (args.baseSearchParam !== undefined) {
      this.baseSearchParam = args.baseSearchParam;
    }
    if (args.campaignIds !== undefined) {
      this.campaignIds = args.campaignIds;
    }
    if (args.adGroupIds !== undefined) {
      this.adGroupIds = args.adGroupIds;
    }
    if (args.statusInherited !== undefined) {
      this.statusInherited = args.statusInherited;
    }
  }
};
AdSearchRequest.prototype = {};
AdSearchRequest.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.baseSearchParam = new ttypes.BaseSearchParam();
        this.baseSearchParam.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.LIST) {
        var _size88 = 0;
        var _rtmp392;
        this.campaignIds = [];
        var _etype91 = 0;
        _rtmp392 = input.readListBegin();
        _etype91 = _rtmp392.etype;
        _size88 = _rtmp392.size;
        for (var _i93 = 0; _i93 < _size88; ++_i93)
        {
          var elem94 = null;
          elem94 = input.readString();
          this.campaignIds.push(elem94);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.LIST) {
        var _size95 = 0;
        var _rtmp399;
        this.adGroupIds = [];
        var _etype98 = 0;
        _rtmp399 = input.readListBegin();
        _etype98 = _rtmp399.etype;
        _size95 = _rtmp399.size;
        for (var _i100 = 0; _i100 < _size95; ++_i100)
        {
          var elem101 = null;
          elem101 = input.readString();
          this.adGroupIds.push(elem101);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.BOOL) {
        this.statusInherited = input.readBool();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AdSearchRequest.prototype.write = function(output) {
  output.writeStructBegin('AdSearchRequest');
  if (this.baseSearchParam !== null && this.baseSearchParam !== undefined) {
    output.writeFieldBegin('baseSearchParam', Thrift.Type.STRUCT, 1);
    this.baseSearchParam.write(output);
    output.writeFieldEnd();
  }
  if (this.campaignIds !== null && this.campaignIds !== undefined) {
    output.writeFieldBegin('campaignIds', Thrift.Type.LIST, 2);
    output.writeListBegin(Thrift.Type.STRING, this.campaignIds.length);
    for (var iter102 in this.campaignIds)
    {
      if (this.campaignIds.hasOwnProperty(iter102))
      {
        iter102 = this.campaignIds[iter102];
        output.writeString(iter102);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.adGroupIds !== null && this.adGroupIds !== undefined) {
    output.writeFieldBegin('adGroupIds', Thrift.Type.LIST, 3);
    output.writeListBegin(Thrift.Type.STRING, this.adGroupIds.length);
    for (var iter103 in this.adGroupIds)
    {
      if (this.adGroupIds.hasOwnProperty(iter103))
      {
        iter103 = this.adGroupIds[iter103];
        output.writeString(iter103);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.statusInherited !== null && this.statusInherited !== undefined) {
    output.writeFieldBegin('statusInherited', Thrift.Type.BOOL, 4);
    output.writeBool(this.statusInherited);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BannerDetail = module.exports.BannerDetail = function(args) {
  this.altText = null;
  this.previewURLs = null;
  if (args) {
    if (args.altText !== undefined) {
      this.altText = args.altText;
    }
    if (args.previewURLs !== undefined) {
      this.previewURLs = args.previewURLs;
    }
  }
};
BannerDetail.prototype = {};
BannerDetail.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.altText = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.MAP) {
        var _size104 = 0;
        var _rtmp3108;
        this.previewURLs = {};
        var _ktype105 = 0;
        var _vtype106 = 0;
        _rtmp3108 = input.readMapBegin();
        _ktype105 = _rtmp3108.ktype;
        _vtype106 = _rtmp3108.vtype;
        _size104 = _rtmp3108.size;
        for (var _i109 = 0; _i109 < _size104; ++_i109)
        {
          var key110 = null;
          var val111 = null;
          key110 = input.readI32();
          val111 = input.readString();
          this.previewURLs[key110] = val111;
        }
        input.readMapEnd();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BannerDetail.prototype.write = function(output) {
  output.writeStructBegin('BannerDetail');
  if (this.altText !== null && this.altText !== undefined) {
    output.writeFieldBegin('altText', Thrift.Type.STRING, 1);
    output.writeString(this.altText);
    output.writeFieldEnd();
  }
  if (this.previewURLs !== null && this.previewURLs !== undefined) {
    output.writeFieldBegin('previewURLs', Thrift.Type.MAP, 2);
    output.writeMapBegin(Thrift.Type.I32, Thrift.Type.STRING, Thrift.objectLength(this.previewURLs));
    for (var kiter112 in this.previewURLs)
    {
      if (this.previewURLs.hasOwnProperty(kiter112))
      {
        var viter113 = this.previewURLs[kiter112];
        output.writeI32(kiter112);
        output.writeString(viter113);
      }
    }
    output.writeMapEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

RMDetail = module.exports.RMDetail = function(args) {
  this.altText = null;
  this.rmCreative = null;
  this.sdkCapabilities = null;
  if (args) {
    if (args.altText !== undefined) {
      this.altText = args.altText;
    }
    if (args.rmCreative !== undefined) {
      this.rmCreative = args.rmCreative;
    }
    if (args.sdkCapabilities !== undefined) {
      this.sdkCapabilities = args.sdkCapabilities;
    }
  }
};
RMDetail.prototype = {};
RMDetail.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.altText = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.rmCreative = new DemandModel_ttypes.RichMediaCreative();
        this.rmCreative.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.LIST) {
        var _size114 = 0;
        var _rtmp3118;
        this.sdkCapabilities = [];
        var _etype117 = 0;
        _rtmp3118 = input.readListBegin();
        _etype117 = _rtmp3118.etype;
        _size114 = _rtmp3118.size;
        for (var _i119 = 0; _i119 < _size114; ++_i119)
        {
          var elem120 = null;
          elem120 = input.readI32();
          this.sdkCapabilities.push(elem120);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

RMDetail.prototype.write = function(output) {
  output.writeStructBegin('RMDetail');
  if (this.altText !== null && this.altText !== undefined) {
    output.writeFieldBegin('altText', Thrift.Type.STRING, 1);
    output.writeString(this.altText);
    output.writeFieldEnd();
  }
  if (this.rmCreative !== null && this.rmCreative !== undefined) {
    output.writeFieldBegin('rmCreative', Thrift.Type.STRUCT, 2);
    this.rmCreative.write(output);
    output.writeFieldEnd();
  }
  if (this.sdkCapabilities !== null && this.sdkCapabilities !== undefined) {
    output.writeFieldBegin('sdkCapabilities', Thrift.Type.LIST, 3);
    output.writeListBegin(Thrift.Type.I32, this.sdkCapabilities.length);
    for (var iter121 in this.sdkCapabilities)
    {
      if (this.sdkCapabilities.hasOwnProperty(iter121))
      {
        iter121 = this.sdkCapabilities[iter121];
        output.writeI32(iter121);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

AdDetail = module.exports.AdDetail = function(args) {
  this.adBasic = null;
  this.adId = null;
  this.accountId = null;
  this.campaignId = null;
  this.status = null;
  this.previousStatus = null;
  this.createdOn = null;
  this.simpleAdValue = null;
  this.bannerDetail = null;
  this.rmDetail = null;
  if (args) {
    if (args.adBasic !== undefined) {
      this.adBasic = args.adBasic;
    }
    if (args.adId !== undefined) {
      this.adId = args.adId;
    }
    if (args.accountId !== undefined) {
      this.accountId = args.accountId;
    }
    if (args.campaignId !== undefined) {
      this.campaignId = args.campaignId;
    }
    if (args.status !== undefined) {
      this.status = args.status;
    }
    if (args.previousStatus !== undefined) {
      this.previousStatus = args.previousStatus;
    }
    if (args.createdOn !== undefined) {
      this.createdOn = args.createdOn;
    }
    if (args.simpleAdValue !== undefined) {
      this.simpleAdValue = args.simpleAdValue;
    }
    if (args.bannerDetail !== undefined) {
      this.bannerDetail = args.bannerDetail;
    }
    if (args.rmDetail !== undefined) {
      this.rmDetail = args.rmDetail;
    }
  }
};
AdDetail.prototype = {};
AdDetail.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.adBasic = new DemandModel_ttypes.AdBasic();
        this.adBasic.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.adId = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.accountId = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.STRING) {
        this.campaignId = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 5:
      if (ftype == Thrift.Type.I32) {
        this.status = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 6:
      if (ftype == Thrift.Type.I32) {
        this.previousStatus = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 7:
      if (ftype == Thrift.Type.STRUCT) {
        this.createdOn = new DemandModel_ttypes.DateTime();
        this.createdOn.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 8:
      if (ftype == Thrift.Type.STRING) {
        this.simpleAdValue = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 9:
      if (ftype == Thrift.Type.STRUCT) {
        this.bannerDetail = new ttypes.BannerDetail();
        this.bannerDetail.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 10:
      if (ftype == Thrift.Type.STRUCT) {
        this.rmDetail = new ttypes.RMDetail();
        this.rmDetail.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AdDetail.prototype.write = function(output) {
  output.writeStructBegin('AdDetail');
  if (this.adBasic !== null && this.adBasic !== undefined) {
    output.writeFieldBegin('adBasic', Thrift.Type.STRUCT, 1);
    this.adBasic.write(output);
    output.writeFieldEnd();
  }
  if (this.adId !== null && this.adId !== undefined) {
    output.writeFieldBegin('adId', Thrift.Type.STRING, 2);
    output.writeString(this.adId);
    output.writeFieldEnd();
  }
  if (this.accountId !== null && this.accountId !== undefined) {
    output.writeFieldBegin('accountId', Thrift.Type.STRING, 3);
    output.writeString(this.accountId);
    output.writeFieldEnd();
  }
  if (this.campaignId !== null && this.campaignId !== undefined) {
    output.writeFieldBegin('campaignId', Thrift.Type.STRING, 4);
    output.writeString(this.campaignId);
    output.writeFieldEnd();
  }
  if (this.status !== null && this.status !== undefined) {
    output.writeFieldBegin('status', Thrift.Type.I32, 5);
    output.writeI32(this.status);
    output.writeFieldEnd();
  }
  if (this.previousStatus !== null && this.previousStatus !== undefined) {
    output.writeFieldBegin('previousStatus', Thrift.Type.I32, 6);
    output.writeI32(this.previousStatus);
    output.writeFieldEnd();
  }
  if (this.createdOn !== null && this.createdOn !== undefined) {
    output.writeFieldBegin('createdOn', Thrift.Type.STRUCT, 7);
    this.createdOn.write(output);
    output.writeFieldEnd();
  }
  if (this.simpleAdValue !== null && this.simpleAdValue !== undefined) {
    output.writeFieldBegin('simpleAdValue', Thrift.Type.STRING, 8);
    output.writeString(this.simpleAdValue);
    output.writeFieldEnd();
  }
  if (this.bannerDetail !== null && this.bannerDetail !== undefined) {
    output.writeFieldBegin('bannerDetail', Thrift.Type.STRUCT, 9);
    this.bannerDetail.write(output);
    output.writeFieldEnd();
  }
  if (this.rmDetail !== null && this.rmDetail !== undefined) {
    output.writeFieldBegin('rmDetail', Thrift.Type.STRUCT, 10);
    this.rmDetail.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

CreativeDetail = module.exports.CreativeDetail = function(args) {
  this.contentId = null;
  this.previewURLs = null;
  if (args) {
    if (args.contentId !== undefined) {
      this.contentId = args.contentId;
    }
    if (args.previewURLs !== undefined) {
      this.previewURLs = args.previewURLs;
    }
  }
};
CreativeDetail.prototype = {};
CreativeDetail.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.contentId = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.MAP) {
        var _size122 = 0;
        var _rtmp3126;
        this.previewURLs = {};
        var _ktype123 = 0;
        var _vtype124 = 0;
        _rtmp3126 = input.readMapBegin();
        _ktype123 = _rtmp3126.ktype;
        _vtype124 = _rtmp3126.vtype;
        _size122 = _rtmp3126.size;
        for (var _i127 = 0; _i127 < _size122; ++_i127)
        {
          var key128 = null;
          var val129 = null;
          key128 = input.readI32();
          val129 = input.readString();
          this.previewURLs[key128] = val129;
        }
        input.readMapEnd();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CreativeDetail.prototype.write = function(output) {
  output.writeStructBegin('CreativeDetail');
  if (this.contentId !== null && this.contentId !== undefined) {
    output.writeFieldBegin('contentId', Thrift.Type.I32, 1);
    output.writeI32(this.contentId);
    output.writeFieldEnd();
  }
  if (this.previewURLs !== null && this.previewURLs !== undefined) {
    output.writeFieldBegin('previewURLs', Thrift.Type.MAP, 2);
    output.writeMapBegin(Thrift.Type.I32, Thrift.Type.STRING, Thrift.objectLength(this.previewURLs));
    for (var kiter130 in this.previewURLs)
    {
      if (this.previewURLs.hasOwnProperty(kiter130))
      {
        var viter131 = this.previewURLs[kiter130];
        output.writeI32(kiter130);
        output.writeString(viter131);
      }
    }
    output.writeMapEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

RMCreativeDetail = module.exports.RMCreativeDetail = function(args) {
  this.contentId = null;
  this.rmCreative = null;
  if (args) {
    if (args.contentId !== undefined) {
      this.contentId = args.contentId;
    }
    if (args.rmCreative !== undefined) {
      this.rmCreative = args.rmCreative;
    }
  }
};
RMCreativeDetail.prototype = {};
RMCreativeDetail.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.contentId = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.rmCreative = new DemandModel_ttypes.RichMediaCreative();
        this.rmCreative.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

RMCreativeDetail.prototype.write = function(output) {
  output.writeStructBegin('RMCreativeDetail');
  if (this.contentId !== null && this.contentId !== undefined) {
    output.writeFieldBegin('contentId', Thrift.Type.I32, 1);
    output.writeI32(this.contentId);
    output.writeFieldEnd();
  }
  if (this.rmCreative !== null && this.rmCreative !== undefined) {
    output.writeFieldBegin('rmCreative', Thrift.Type.STRUCT, 2);
    this.rmCreative.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

